/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SubmitPostFormdataRouteImport } from './routes/submit-post-formdata'
import { Route as StatusRouteImport } from './routes/status'
import { Route as SerializeFormDataRouteImport } from './routes/serialize-form-data'
import { Route as ReturnNullRouteImport } from './routes/return-null'
import { Route as RawResponseRouteImport } from './routes/raw-response'
import { Route as MultipartRouteImport } from './routes/multipart'
import { Route as IsomorphicFnsRouteImport } from './routes/isomorphic-fns'
import { Route as HeadersRouteImport } from './routes/headers'
import { Route as EnvOnlyRouteImport } from './routes/env-only'
import { Route as DeadCodePreserveRouteImport } from './routes/dead-code-preserve'
import { Route as ConsistentRouteImport } from './routes/consistent'
import { Route as AbortSignalRouteImport } from './routes/abort-signal'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CookiesIndexRouteImport } from './routes/cookies/index'
import { Route as CookiesSetRouteImport } from './routes/cookies/set'

const SubmitPostFormdataRoute = SubmitPostFormdataRouteImport.update({
  id: '/submit-post-formdata',
  path: '/submit-post-formdata',
  getParentRoute: () => rootRouteImport,
} as any)
const StatusRoute = StatusRouteImport.update({
  id: '/status',
  path: '/status',
  getParentRoute: () => rootRouteImport,
} as any)
const SerializeFormDataRoute = SerializeFormDataRouteImport.update({
  id: '/serialize-form-data',
  path: '/serialize-form-data',
  getParentRoute: () => rootRouteImport,
} as any)
const ReturnNullRoute = ReturnNullRouteImport.update({
  id: '/return-null',
  path: '/return-null',
  getParentRoute: () => rootRouteImport,
} as any)
const RawResponseRoute = RawResponseRouteImport.update({
  id: '/raw-response',
  path: '/raw-response',
  getParentRoute: () => rootRouteImport,
} as any)
const MultipartRoute = MultipartRouteImport.update({
  id: '/multipart',
  path: '/multipart',
  getParentRoute: () => rootRouteImport,
} as any)
const IsomorphicFnsRoute = IsomorphicFnsRouteImport.update({
  id: '/isomorphic-fns',
  path: '/isomorphic-fns',
  getParentRoute: () => rootRouteImport,
} as any)
const HeadersRoute = HeadersRouteImport.update({
  id: '/headers',
  path: '/headers',
  getParentRoute: () => rootRouteImport,
} as any)
const EnvOnlyRoute = EnvOnlyRouteImport.update({
  id: '/env-only',
  path: '/env-only',
  getParentRoute: () => rootRouteImport,
} as any)
const DeadCodePreserveRoute = DeadCodePreserveRouteImport.update({
  id: '/dead-code-preserve',
  path: '/dead-code-preserve',
  getParentRoute: () => rootRouteImport,
} as any)
const ConsistentRoute = ConsistentRouteImport.update({
  id: '/consistent',
  path: '/consistent',
  getParentRoute: () => rootRouteImport,
} as any)
const AbortSignalRoute = AbortSignalRouteImport.update({
  id: '/abort-signal',
  path: '/abort-signal',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CookiesIndexRoute = CookiesIndexRouteImport.update({
  id: '/cookies/',
  path: '/cookies/',
  getParentRoute: () => rootRouteImport,
} as any)
const CookiesSetRoute = CookiesSetRouteImport.update({
  id: '/cookies/set',
  path: '/cookies/set',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/abort-signal': typeof AbortSignalRoute
  '/consistent': typeof ConsistentRoute
  '/dead-code-preserve': typeof DeadCodePreserveRoute
  '/env-only': typeof EnvOnlyRoute
  '/headers': typeof HeadersRoute
  '/isomorphic-fns': typeof IsomorphicFnsRoute
  '/multipart': typeof MultipartRoute
  '/raw-response': typeof RawResponseRoute
  '/return-null': typeof ReturnNullRoute
  '/serialize-form-data': typeof SerializeFormDataRoute
  '/status': typeof StatusRoute
  '/submit-post-formdata': typeof SubmitPostFormdataRoute
  '/cookies/set': typeof CookiesSetRoute
  '/cookies': typeof CookiesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/abort-signal': typeof AbortSignalRoute
  '/consistent': typeof ConsistentRoute
  '/dead-code-preserve': typeof DeadCodePreserveRoute
  '/env-only': typeof EnvOnlyRoute
  '/headers': typeof HeadersRoute
  '/isomorphic-fns': typeof IsomorphicFnsRoute
  '/multipart': typeof MultipartRoute
  '/raw-response': typeof RawResponseRoute
  '/return-null': typeof ReturnNullRoute
  '/serialize-form-data': typeof SerializeFormDataRoute
  '/status': typeof StatusRoute
  '/submit-post-formdata': typeof SubmitPostFormdataRoute
  '/cookies/set': typeof CookiesSetRoute
  '/cookies': typeof CookiesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/abort-signal': typeof AbortSignalRoute
  '/consistent': typeof ConsistentRoute
  '/dead-code-preserve': typeof DeadCodePreserveRoute
  '/env-only': typeof EnvOnlyRoute
  '/headers': typeof HeadersRoute
  '/isomorphic-fns': typeof IsomorphicFnsRoute
  '/multipart': typeof MultipartRoute
  '/raw-response': typeof RawResponseRoute
  '/return-null': typeof ReturnNullRoute
  '/serialize-form-data': typeof SerializeFormDataRoute
  '/status': typeof StatusRoute
  '/submit-post-formdata': typeof SubmitPostFormdataRoute
  '/cookies/set': typeof CookiesSetRoute
  '/cookies/': typeof CookiesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/abort-signal'
    | '/consistent'
    | '/dead-code-preserve'
    | '/env-only'
    | '/headers'
    | '/isomorphic-fns'
    | '/multipart'
    | '/raw-response'
    | '/return-null'
    | '/serialize-form-data'
    | '/status'
    | '/submit-post-formdata'
    | '/cookies/set'
    | '/cookies'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/abort-signal'
    | '/consistent'
    | '/dead-code-preserve'
    | '/env-only'
    | '/headers'
    | '/isomorphic-fns'
    | '/multipart'
    | '/raw-response'
    | '/return-null'
    | '/serialize-form-data'
    | '/status'
    | '/submit-post-formdata'
    | '/cookies/set'
    | '/cookies'
  id:
    | '__root__'
    | '/'
    | '/abort-signal'
    | '/consistent'
    | '/dead-code-preserve'
    | '/env-only'
    | '/headers'
    | '/isomorphic-fns'
    | '/multipart'
    | '/raw-response'
    | '/return-null'
    | '/serialize-form-data'
    | '/status'
    | '/submit-post-formdata'
    | '/cookies/set'
    | '/cookies/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AbortSignalRoute: typeof AbortSignalRoute
  ConsistentRoute: typeof ConsistentRoute
  DeadCodePreserveRoute: typeof DeadCodePreserveRoute
  EnvOnlyRoute: typeof EnvOnlyRoute
  HeadersRoute: typeof HeadersRoute
  IsomorphicFnsRoute: typeof IsomorphicFnsRoute
  MultipartRoute: typeof MultipartRoute
  RawResponseRoute: typeof RawResponseRoute
  ReturnNullRoute: typeof ReturnNullRoute
  SerializeFormDataRoute: typeof SerializeFormDataRoute
  StatusRoute: typeof StatusRoute
  SubmitPostFormdataRoute: typeof SubmitPostFormdataRoute
  CookiesSetRoute: typeof CookiesSetRoute
  CookiesIndexRoute: typeof CookiesIndexRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/abort-signal': {
      id: '/abort-signal'
      path: '/abort-signal'
      fullPath: '/abort-signal'
      preLoaderRoute: typeof AbortSignalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/consistent': {
      id: '/consistent'
      path: '/consistent'
      fullPath: '/consistent'
      preLoaderRoute: typeof ConsistentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dead-code-preserve': {
      id: '/dead-code-preserve'
      path: '/dead-code-preserve'
      fullPath: '/dead-code-preserve'
      preLoaderRoute: typeof DeadCodePreserveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/env-only': {
      id: '/env-only'
      path: '/env-only'
      fullPath: '/env-only'
      preLoaderRoute: typeof EnvOnlyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/headers': {
      id: '/headers'
      path: '/headers'
      fullPath: '/headers'
      preLoaderRoute: typeof HeadersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/isomorphic-fns': {
      id: '/isomorphic-fns'
      path: '/isomorphic-fns'
      fullPath: '/isomorphic-fns'
      preLoaderRoute: typeof IsomorphicFnsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/multipart': {
      id: '/multipart'
      path: '/multipart'
      fullPath: '/multipart'
      preLoaderRoute: typeof MultipartRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/raw-response': {
      id: '/raw-response'
      path: '/raw-response'
      fullPath: '/raw-response'
      preLoaderRoute: typeof RawResponseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/return-null': {
      id: '/return-null'
      path: '/return-null'
      fullPath: '/return-null'
      preLoaderRoute: typeof ReturnNullRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/serialize-form-data': {
      id: '/serialize-form-data'
      path: '/serialize-form-data'
      fullPath: '/serialize-form-data'
      preLoaderRoute: typeof SerializeFormDataRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/status': {
      id: '/status'
      path: '/status'
      fullPath: '/status'
      preLoaderRoute: typeof StatusRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/submit-post-formdata': {
      id: '/submit-post-formdata'
      path: '/submit-post-formdata'
      fullPath: '/submit-post-formdata'
      preLoaderRoute: typeof SubmitPostFormdataRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cookies/set': {
      id: '/cookies/set'
      path: '/cookies/set'
      fullPath: '/cookies/set'
      preLoaderRoute: typeof CookiesSetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cookies/': {
      id: '/cookies/'
      path: '/cookies'
      fullPath: '/cookies'
      preLoaderRoute: typeof CookiesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AbortSignalRoute: AbortSignalRoute,
  ConsistentRoute: ConsistentRoute,
  DeadCodePreserveRoute: DeadCodePreserveRoute,
  EnvOnlyRoute: EnvOnlyRoute,
  HeadersRoute: HeadersRoute,
  IsomorphicFnsRoute: IsomorphicFnsRoute,
  MultipartRoute: MultipartRoute,
  RawResponseRoute: RawResponseRoute,
  ReturnNullRoute: ReturnNullRoute,
  SerializeFormDataRoute: SerializeFormDataRoute,
  StatusRoute: StatusRoute,
  SubmitPostFormdataRoute: SubmitPostFormdataRoute,
  CookiesSetRoute: CookiesSetRoute,
  CookiesIndexRoute: CookiesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
