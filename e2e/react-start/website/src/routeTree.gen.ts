/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LibraryRouteImport } from './routes/_library'
import { Route as LibraryIndexRouteImport } from './routes/_library.index'
import { Route as ProjectIndexRouteImport } from './routes/$project.index'
import { Route as LibraryProjectRouteImport } from './routes/_library.$project'
import { Route as LibraryProjectVersionIndexRouteImport } from './routes/_library.$project.$version.index'
import { Route as ProjectVersionDocsIndexRouteImport } from './routes/$project.$version.docs.index'
import { Route as ProjectVersionDocsFrameworkFrameworkRouteImport } from './routes/$project.$version.docs.framework.$framework'
import { Route as ProjectVersionDocsFrameworkFrameworkIndexRouteImport } from './routes/$project.$version.docs.framework.$framework.index'
import { Route as ProjectVersionDocsFrameworkFrameworkSplatRouteImport } from './routes/$project.$version.docs.framework.$framework.$'
import { Route as ProjectVersionDocsFrameworkFrameworkExamplesSplatRouteImport } from './routes/$project.$version.docs.framework.$framework.examples.$'
import { ServerRoute as ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRouteImport } from './routes/$project.$version.docs.framework.$framework.{$}[.]md'

const rootServerRouteImport = createServerRootRoute()

const LibraryRoute = LibraryRouteImport.update({
  id: '/_library',
  getParentRoute: () => rootRouteImport,
} as any)
const LibraryIndexRoute = LibraryIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LibraryRoute,
} as any)
const ProjectIndexRoute = ProjectIndexRouteImport.update({
  id: '/$project/',
  path: '/$project/',
  getParentRoute: () => rootRouteImport,
} as any)
const LibraryProjectRoute = LibraryProjectRouteImport.update({
  id: '/$project',
  path: '/$project',
  getParentRoute: () => LibraryRoute,
} as any)
const LibraryProjectVersionIndexRoute =
  LibraryProjectVersionIndexRouteImport.update({
    id: '/$version/',
    path: '/$version/',
    getParentRoute: () => LibraryProjectRoute,
  } as any)
const ProjectVersionDocsIndexRoute = ProjectVersionDocsIndexRouteImport.update({
  id: '/$project/$version/docs/',
  path: '/$project/$version/docs/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectVersionDocsFrameworkFrameworkRoute =
  ProjectVersionDocsFrameworkFrameworkRouteImport.update({
    id: '/$project/$version/docs/framework/$framework',
    path: '/$project/$version/docs/framework/$framework',
    getParentRoute: () => rootRouteImport,
  } as any)
const ProjectVersionDocsFrameworkFrameworkIndexRoute =
  ProjectVersionDocsFrameworkFrameworkIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProjectVersionDocsFrameworkFrameworkRoute,
  } as any)
const ProjectVersionDocsFrameworkFrameworkSplatRoute =
  ProjectVersionDocsFrameworkFrameworkSplatRouteImport.update({
    id: '/$',
    path: '/$',
    getParentRoute: () => ProjectVersionDocsFrameworkFrameworkRoute,
  } as any)
const ProjectVersionDocsFrameworkFrameworkExamplesSplatRoute =
  ProjectVersionDocsFrameworkFrameworkExamplesSplatRouteImport.update({
    id: '/examples/$',
    path: '/examples/$',
    getParentRoute: () => ProjectVersionDocsFrameworkFrameworkRoute,
  } as any)
const ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRoute =
  ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRouteImport.update(
    {
      id: '/$project/$version/docs/framework/$framework/{$}.md',
      path: '/$project/$version/docs/framework/$framework/{$}.md',
      getParentRoute: () => rootServerRouteImport,
    } as any,
  )

export interface FileRoutesByFullPath {
  '': typeof LibraryRouteWithChildren
  '/$project': typeof ProjectIndexRoute
  '/': typeof LibraryIndexRoute
  '/$project/$version/docs': typeof ProjectVersionDocsIndexRoute
  '/$project/$version': typeof LibraryProjectVersionIndexRoute
  '/$project/$version/docs/framework/$framework': typeof ProjectVersionDocsFrameworkFrameworkRouteWithChildren
  '/$project/$version/docs/framework/$framework/$': typeof ProjectVersionDocsFrameworkFrameworkSplatRoute
  '/$project/$version/docs/framework/$framework/': typeof ProjectVersionDocsFrameworkFrameworkIndexRoute
  '/$project/$version/docs/framework/$framework/examples/$': typeof ProjectVersionDocsFrameworkFrameworkExamplesSplatRoute
}
export interface FileRoutesByTo {
  '/$project': typeof ProjectIndexRoute
  '/': typeof LibraryIndexRoute
  '/$project/$version/docs': typeof ProjectVersionDocsIndexRoute
  '/$project/$version': typeof LibraryProjectVersionIndexRoute
  '/$project/$version/docs/framework/$framework/$': typeof ProjectVersionDocsFrameworkFrameworkSplatRoute
  '/$project/$version/docs/framework/$framework': typeof ProjectVersionDocsFrameworkFrameworkIndexRoute
  '/$project/$version/docs/framework/$framework/examples/$': typeof ProjectVersionDocsFrameworkFrameworkExamplesSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_library': typeof LibraryRouteWithChildren
  '/_library/$project': typeof LibraryProjectRouteWithChildren
  '/$project/': typeof ProjectIndexRoute
  '/_library/': typeof LibraryIndexRoute
  '/$project/$version/docs/': typeof ProjectVersionDocsIndexRoute
  '/_library/$project/$version/': typeof LibraryProjectVersionIndexRoute
  '/$project/$version/docs/framework/$framework': typeof ProjectVersionDocsFrameworkFrameworkRouteWithChildren
  '/$project/$version/docs/framework/$framework/$': typeof ProjectVersionDocsFrameworkFrameworkSplatRoute
  '/$project/$version/docs/framework/$framework/': typeof ProjectVersionDocsFrameworkFrameworkIndexRoute
  '/$project/$version/docs/framework/$framework/examples/$': typeof ProjectVersionDocsFrameworkFrameworkExamplesSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/$project'
    | '/'
    | '/$project/$version/docs'
    | '/$project/$version'
    | '/$project/$version/docs/framework/$framework'
    | '/$project/$version/docs/framework/$framework/$'
    | '/$project/$version/docs/framework/$framework/'
    | '/$project/$version/docs/framework/$framework/examples/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/$project'
    | '/'
    | '/$project/$version/docs'
    | '/$project/$version'
    | '/$project/$version/docs/framework/$framework/$'
    | '/$project/$version/docs/framework/$framework'
    | '/$project/$version/docs/framework/$framework/examples/$'
  id:
    | '__root__'
    | '/_library'
    | '/_library/$project'
    | '/$project/'
    | '/_library/'
    | '/$project/$version/docs/'
    | '/_library/$project/$version/'
    | '/$project/$version/docs/framework/$framework'
    | '/$project/$version/docs/framework/$framework/$'
    | '/$project/$version/docs/framework/$framework/'
    | '/$project/$version/docs/framework/$framework/examples/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LibraryRoute: typeof LibraryRouteWithChildren
  ProjectIndexRoute: typeof ProjectIndexRoute
  ProjectVersionDocsIndexRoute: typeof ProjectVersionDocsIndexRoute
  ProjectVersionDocsFrameworkFrameworkRoute: typeof ProjectVersionDocsFrameworkFrameworkRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/$project/$version/docs/framework/$framework/{$}.md': typeof ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRoute
}
export interface FileServerRoutesByTo {
  '/$project/$version/docs/framework/$framework/{$}.md': typeof ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/$project/$version/docs/framework/$framework/{$}.md': typeof ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/$project/$version/docs/framework/$framework/{$}.md'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/$project/$version/docs/framework/$framework/{$}.md'
  id: '__root__' | '/$project/$version/docs/framework/$framework/{$}.md'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRoute: typeof ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_library': {
      id: '/_library'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LibraryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_library/$project': {
      id: '/_library/$project'
      path: '/$project'
      fullPath: '/$project'
      preLoaderRoute: typeof LibraryProjectRouteImport
      parentRoute: typeof LibraryRoute
    }
    '/$project/': {
      id: '/$project/'
      path: '/$project'
      fullPath: '/$project'
      preLoaderRoute: typeof ProjectIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_library/': {
      id: '/_library/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LibraryIndexRouteImport
      parentRoute: typeof LibraryRoute
    }
    '/$project/$version/docs/': {
      id: '/$project/$version/docs/'
      path: '/$project/$version/docs'
      fullPath: '/$project/$version/docs'
      preLoaderRoute: typeof ProjectVersionDocsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_library/$project/$version/': {
      id: '/_library/$project/$version/'
      path: '/$version'
      fullPath: '/$project/$version'
      preLoaderRoute: typeof LibraryProjectVersionIndexRouteImport
      parentRoute: typeof LibraryProjectRoute
    }
    '/$project/$version/docs/framework/$framework': {
      id: '/$project/$version/docs/framework/$framework'
      path: '/$project/$version/docs/framework/$framework'
      fullPath: '/$project/$version/docs/framework/$framework'
      preLoaderRoute: typeof ProjectVersionDocsFrameworkFrameworkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$project/$version/docs/framework/$framework/$': {
      id: '/$project/$version/docs/framework/$framework/$'
      path: '/$'
      fullPath: '/$project/$version/docs/framework/$framework/$'
      preLoaderRoute: typeof ProjectVersionDocsFrameworkFrameworkSplatRouteImport
      parentRoute: typeof ProjectVersionDocsFrameworkFrameworkRoute
    }
    '/$project/$version/docs/framework/$framework/{$}.md': {
      id: '/$project/$version/docs/framework/$framework/{$}.md'
      path: ''
      fullPath: '/$project/$version/docs/framework/$framework/{$}.md'
      preLoaderRoute: unknown
      parentRoute: typeof rootRouteImport
    }
    '/$project/$version/docs/framework/$framework/': {
      id: '/$project/$version/docs/framework/$framework/'
      path: '/'
      fullPath: '/$project/$version/docs/framework/$framework/'
      preLoaderRoute: typeof ProjectVersionDocsFrameworkFrameworkIndexRouteImport
      parentRoute: typeof ProjectVersionDocsFrameworkFrameworkRoute
    }
    '/$project/$version/docs/framework/$framework/examples/$': {
      id: '/$project/$version/docs/framework/$framework/examples/$'
      path: '/examples/$'
      fullPath: '/$project/$version/docs/framework/$framework/examples/$'
      preLoaderRoute: typeof ProjectVersionDocsFrameworkFrameworkExamplesSplatRouteImport
      parentRoute: typeof ProjectVersionDocsFrameworkFrameworkRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/_library': {
      id: '/_library'
      path: ''
      fullPath: ''
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_library/$project': {
      id: '/_library/$project'
      path: '/$project'
      fullPath: '/$project'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/$project/': {
      id: '/$project/'
      path: '/$project'
      fullPath: '/$project'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_library/': {
      id: '/_library/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/$project/$version/docs/': {
      id: '/$project/$version/docs/'
      path: '/$project/$version/docs'
      fullPath: '/$project/$version/docs'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_library/$project/$version/': {
      id: '/_library/$project/$version/'
      path: '/$version'
      fullPath: '/$project/$version'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/$project/$version/docs/framework/$framework': {
      id: '/$project/$version/docs/framework/$framework'
      path: '/$project/$version/docs/framework/$framework'
      fullPath: '/$project/$version/docs/framework/$framework'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/$project/$version/docs/framework/$framework/$': {
      id: '/$project/$version/docs/framework/$framework/$'
      path: '/$'
      fullPath: '/$project/$version/docs/framework/$framework/$'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/$project/$version/docs/framework/$framework/{$}.md': {
      id: '/$project/$version/docs/framework/$framework/{$}.md'
      path: '/$project/$version/docs/framework/$framework/{$}.md'
      fullPath: '/$project/$version/docs/framework/$framework/{$}.md'
      preLoaderRoute: typeof ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/$project/$version/docs/framework/$framework/': {
      id: '/$project/$version/docs/framework/$framework/'
      path: '/'
      fullPath: '/$project/$version/docs/framework/$framework/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/$project/$version/docs/framework/$framework/examples/$': {
      id: '/$project/$version/docs/framework/$framework/examples/$'
      path: '/examples/$'
      fullPath: '/$project/$version/docs/framework/$framework/examples/$'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface LibraryProjectRouteChildren {
  LibraryProjectVersionIndexRoute: typeof LibraryProjectVersionIndexRoute
}

const LibraryProjectRouteChildren: LibraryProjectRouteChildren = {
  LibraryProjectVersionIndexRoute: LibraryProjectVersionIndexRoute,
}

const LibraryProjectRouteWithChildren = LibraryProjectRoute._addFileChildren(
  LibraryProjectRouteChildren,
)

interface LibraryRouteChildren {
  LibraryProjectRoute: typeof LibraryProjectRouteWithChildren
  LibraryIndexRoute: typeof LibraryIndexRoute
}

const LibraryRouteChildren: LibraryRouteChildren = {
  LibraryProjectRoute: LibraryProjectRouteWithChildren,
  LibraryIndexRoute: LibraryIndexRoute,
}

const LibraryRouteWithChildren =
  LibraryRoute._addFileChildren(LibraryRouteChildren)

interface ProjectVersionDocsFrameworkFrameworkRouteChildren {
  ProjectVersionDocsFrameworkFrameworkSplatRoute: typeof ProjectVersionDocsFrameworkFrameworkSplatRoute
  ProjectVersionDocsFrameworkFrameworkIndexRoute: typeof ProjectVersionDocsFrameworkFrameworkIndexRoute
  ProjectVersionDocsFrameworkFrameworkExamplesSplatRoute: typeof ProjectVersionDocsFrameworkFrameworkExamplesSplatRoute
}

const ProjectVersionDocsFrameworkFrameworkRouteChildren: ProjectVersionDocsFrameworkFrameworkRouteChildren =
  {
    ProjectVersionDocsFrameworkFrameworkSplatRoute:
      ProjectVersionDocsFrameworkFrameworkSplatRoute,
    ProjectVersionDocsFrameworkFrameworkIndexRoute:
      ProjectVersionDocsFrameworkFrameworkIndexRoute,
    ProjectVersionDocsFrameworkFrameworkExamplesSplatRoute:
      ProjectVersionDocsFrameworkFrameworkExamplesSplatRoute,
  }

const ProjectVersionDocsFrameworkFrameworkRouteWithChildren =
  ProjectVersionDocsFrameworkFrameworkRoute._addFileChildren(
    ProjectVersionDocsFrameworkFrameworkRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  LibraryRoute: LibraryRouteWithChildren,
  ProjectIndexRoute: ProjectIndexRoute,
  ProjectVersionDocsIndexRoute: ProjectVersionDocsIndexRoute,
  ProjectVersionDocsFrameworkFrameworkRoute:
    ProjectVersionDocsFrameworkFrameworkRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRoute:
    ProjectVersionDocsFrameworkFrameworkChar123Char125DotmdServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
