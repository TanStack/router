/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as Char45824Char54620Char48124Char44397RouteImport } from './routes/대한민국'
import { Route as UsersRouteImport } from './routes/users'
import { Route as StreamRouteImport } from './routes/stream'
import { Route as ScriptsRouteImport } from './routes/scripts'
import { Route as PostsRouteImport } from './routes/posts'
import { Route as LinksRouteImport } from './routes/links'
import { Route as InlineScriptsRouteImport } from './routes/inline-scripts'
import { Route as DeferredRouteImport } from './routes/deferred'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as SearchParamsRouteRouteImport } from './routes/search-params/route'
import { Route as NotFoundRouteRouteImport } from './routes/not-found/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersIndexRouteImport } from './routes/users.index'
import { Route as SearchParamsIndexRouteImport } from './routes/search-params/index'
import { Route as RedirectIndexRouteImport } from './routes/redirect/index'
import { Route as PostsIndexRouteImport } from './routes/posts.index'
import { Route as NotFoundIndexRouteImport } from './routes/not-found/index'
import { Route as UsersUserIdRouteImport } from './routes/users.$userId'
import { Route as SearchParamsLoaderThrowsRedirectRouteImport } from './routes/search-params/loader-throws-redirect'
import { Route as SearchParamsDefaultRouteImport } from './routes/search-params/default'
import { Route as RedirectTargetRouteImport } from './routes/redirect/$target'
import { Route as PostsPostIdRouteImport } from './routes/posts.$postId'
import { Route as NotFoundViaLoaderRouteImport } from './routes/not-found/via-loader'
import { Route as NotFoundViaBeforeLoadRouteImport } from './routes/not-found/via-beforeLoad'
import { Route as ApiUsersRouteImport } from './routes/api.users'
import { Route as LayoutLayout2RouteImport } from './routes/_layout/_layout-2'
import { Route as RedirectTargetIndexRouteImport } from './routes/redirect/$target/index'
import { Route as RedirectTargetViaLoaderRouteImport } from './routes/redirect/$target/via-loader'
import { Route as RedirectTargetViaBeforeLoadRouteImport } from './routes/redirect/$target/via-beforeLoad'
import { Route as PostsPostIdDeepRouteImport } from './routes/posts_.$postId.deep'
import { Route as ApiUsersIdRouteImport } from './routes/api/users.$id'
import { Route as LayoutLayout2LayoutBRouteImport } from './routes/_layout/_layout-2/layout-b'
import { Route as LayoutLayout2LayoutARouteImport } from './routes/_layout/_layout-2/layout-a'
import { Route as RedirectTargetServerFnIndexRouteImport } from './routes/redirect/$target/serverFn/index'
import { Route as RedirectTargetServerFnViaUseServerFnRouteImport } from './routes/redirect/$target/serverFn/via-useServerFn'
import { Route as RedirectTargetServerFnViaLoaderRouteImport } from './routes/redirect/$target/serverFn/via-loader'
import { Route as RedirectTargetServerFnViaBeforeLoadRouteImport } from './routes/redirect/$target/serverFn/via-beforeLoad'
import { Route as FooBarQuxHereRouteImport } from './routes/foo/$bar/$qux/_here'
import { Route as FooBarQuxHereIndexRouteImport } from './routes/foo/$bar/$qux/_here/index'

const FooBarQuxRouteImport = createFileRoute('/foo/$bar/$qux')()

const Char45824Char54620Char48124Char44397Route =
  Char45824Char54620Char48124Char44397RouteImport.update({
    id: '/대한민국',
    path: '/대한민국',
    getParentRoute: () => rootRouteImport,
  } as any)
const UsersRoute = UsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any)
const StreamRoute = StreamRouteImport.update({
  id: '/stream',
  path: '/stream',
  getParentRoute: () => rootRouteImport,
} as any)
const ScriptsRoute = ScriptsRouteImport.update({
  id: '/scripts',
  path: '/scripts',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsRoute = PostsRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any)
const LinksRoute = LinksRouteImport.update({
  id: '/links',
  path: '/links',
  getParentRoute: () => rootRouteImport,
} as any)
const InlineScriptsRoute = InlineScriptsRouteImport.update({
  id: '/inline-scripts',
  path: '/inline-scripts',
  getParentRoute: () => rootRouteImport,
} as any)
const DeferredRoute = DeferredRouteImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchParamsRouteRoute = SearchParamsRouteRouteImport.update({
  id: '/search-params',
  path: '/search-params',
  getParentRoute: () => rootRouteImport,
} as any)
const NotFoundRouteRoute = NotFoundRouteRouteImport.update({
  id: '/not-found',
  path: '/not-found',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersIndexRoute = UsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UsersRoute,
} as any)
const SearchParamsIndexRoute = SearchParamsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SearchParamsRouteRoute,
} as any)
const RedirectIndexRoute = RedirectIndexRouteImport.update({
  id: '/redirect/',
  path: '/redirect/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRoute,
} as any)
const NotFoundIndexRoute = NotFoundIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NotFoundRouteRoute,
} as any)
const UsersUserIdRoute = UsersUserIdRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => UsersRoute,
} as any)
const SearchParamsLoaderThrowsRedirectRoute =
  SearchParamsLoaderThrowsRedirectRouteImport.update({
    id: '/loader-throws-redirect',
    path: '/loader-throws-redirect',
    getParentRoute: () => SearchParamsRouteRoute,
  } as any)
const SearchParamsDefaultRoute = SearchParamsDefaultRouteImport.update({
  id: '/default',
  path: '/default',
  getParentRoute: () => SearchParamsRouteRoute,
} as any)
const RedirectTargetRoute = RedirectTargetRouteImport.update({
  id: '/redirect/$target',
  path: '/redirect/$target',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsPostIdRoute = PostsPostIdRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRoute,
} as any)
const NotFoundViaLoaderRoute = NotFoundViaLoaderRouteImport.update({
  id: '/via-loader',
  path: '/via-loader',
  getParentRoute: () => NotFoundRouteRoute,
} as any)
const NotFoundViaBeforeLoadRoute = NotFoundViaBeforeLoadRouteImport.update({
  id: '/via-beforeLoad',
  path: '/via-beforeLoad',
  getParentRoute: () => NotFoundRouteRoute,
} as any)
const ApiUsersRoute = ApiUsersRouteImport.update({
  id: '/api/users',
  path: '/api/users',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutLayout2Route = LayoutLayout2RouteImport.update({
  id: '/_layout-2',
  getParentRoute: () => LayoutRoute,
} as any)
const FooBarQuxRoute = FooBarQuxRouteImport.update({
  id: '/foo/$bar/$qux',
  path: '/foo/$bar/$qux',
  getParentRoute: () => rootRouteImport,
} as any)
const RedirectTargetIndexRoute = RedirectTargetIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RedirectTargetRoute,
} as any)
const RedirectTargetViaLoaderRoute = RedirectTargetViaLoaderRouteImport.update({
  id: '/via-loader',
  path: '/via-loader',
  getParentRoute: () => RedirectTargetRoute,
} as any)
const RedirectTargetViaBeforeLoadRoute =
  RedirectTargetViaBeforeLoadRouteImport.update({
    id: '/via-beforeLoad',
    path: '/via-beforeLoad',
    getParentRoute: () => RedirectTargetRoute,
  } as any)
const PostsPostIdDeepRoute = PostsPostIdDeepRouteImport.update({
  id: '/posts_/$postId/deep',
  path: '/posts/$postId/deep',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiUsersIdRoute = ApiUsersIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiUsersRoute,
} as any)
const LayoutLayout2LayoutBRoute = LayoutLayout2LayoutBRouteImport.update({
  id: '/layout-b',
  path: '/layout-b',
  getParentRoute: () => LayoutLayout2Route,
} as any)
const LayoutLayout2LayoutARoute = LayoutLayout2LayoutARouteImport.update({
  id: '/layout-a',
  path: '/layout-a',
  getParentRoute: () => LayoutLayout2Route,
} as any)
const RedirectTargetServerFnIndexRoute =
  RedirectTargetServerFnIndexRouteImport.update({
    id: '/serverFn/',
    path: '/serverFn/',
    getParentRoute: () => RedirectTargetRoute,
  } as any)
const RedirectTargetServerFnViaUseServerFnRoute =
  RedirectTargetServerFnViaUseServerFnRouteImport.update({
    id: '/serverFn/via-useServerFn',
    path: '/serverFn/via-useServerFn',
    getParentRoute: () => RedirectTargetRoute,
  } as any)
const RedirectTargetServerFnViaLoaderRoute =
  RedirectTargetServerFnViaLoaderRouteImport.update({
    id: '/serverFn/via-loader',
    path: '/serverFn/via-loader',
    getParentRoute: () => RedirectTargetRoute,
  } as any)
const RedirectTargetServerFnViaBeforeLoadRoute =
  RedirectTargetServerFnViaBeforeLoadRouteImport.update({
    id: '/serverFn/via-beforeLoad',
    path: '/serverFn/via-beforeLoad',
    getParentRoute: () => RedirectTargetRoute,
  } as any)
const FooBarQuxHereRoute = FooBarQuxHereRouteImport.update({
  id: '/_here',
  getParentRoute: () => FooBarQuxRoute,
} as any)
const FooBarQuxHereIndexRoute = FooBarQuxHereIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FooBarQuxHereRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/not-found': typeof NotFoundRouteRouteWithChildren
  '/search-params': typeof SearchParamsRouteRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/inline-scripts': typeof InlineScriptsRoute
  '/links': typeof LinksRoute
  '/posts': typeof PostsRouteWithChildren
  '/scripts': typeof ScriptsRoute
  '/stream': typeof StreamRoute
  '/users': typeof UsersRouteWithChildren
  '/대한민국': typeof Char45824Char54620Char48124Char44397Route
  '/api/users': typeof ApiUsersRouteWithChildren
  '/not-found/via-beforeLoad': typeof NotFoundViaBeforeLoadRoute
  '/not-found/via-loader': typeof NotFoundViaLoaderRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/redirect/$target': typeof RedirectTargetRouteWithChildren
  '/search-params/default': typeof SearchParamsDefaultRoute
  '/search-params/loader-throws-redirect': typeof SearchParamsLoaderThrowsRedirectRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/not-found/': typeof NotFoundIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/redirect': typeof RedirectIndexRoute
  '/search-params/': typeof SearchParamsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
  '/api/users/$id': typeof ApiUsersIdRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
  '/redirect/$target/via-beforeLoad': typeof RedirectTargetViaBeforeLoadRoute
  '/redirect/$target/via-loader': typeof RedirectTargetViaLoaderRoute
  '/redirect/$target/': typeof RedirectTargetIndexRoute
  '/foo/$bar/$qux': typeof FooBarQuxHereRouteWithChildren
  '/redirect/$target/serverFn/via-beforeLoad': typeof RedirectTargetServerFnViaBeforeLoadRoute
  '/redirect/$target/serverFn/via-loader': typeof RedirectTargetServerFnViaLoaderRoute
  '/redirect/$target/serverFn/via-useServerFn': typeof RedirectTargetServerFnViaUseServerFnRoute
  '/redirect/$target/serverFn': typeof RedirectTargetServerFnIndexRoute
  '/foo/$bar/$qux/': typeof FooBarQuxHereIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/deferred': typeof DeferredRoute
  '/inline-scripts': typeof InlineScriptsRoute
  '/links': typeof LinksRoute
  '/scripts': typeof ScriptsRoute
  '/stream': typeof StreamRoute
  '/대한민국': typeof Char45824Char54620Char48124Char44397Route
  '/api/users': typeof ApiUsersRouteWithChildren
  '/not-found/via-beforeLoad': typeof NotFoundViaBeforeLoadRoute
  '/not-found/via-loader': typeof NotFoundViaLoaderRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/search-params/default': typeof SearchParamsDefaultRoute
  '/search-params/loader-throws-redirect': typeof SearchParamsLoaderThrowsRedirectRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/not-found': typeof NotFoundIndexRoute
  '/posts': typeof PostsIndexRoute
  '/redirect': typeof RedirectIndexRoute
  '/search-params': typeof SearchParamsIndexRoute
  '/users': typeof UsersIndexRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
  '/api/users/$id': typeof ApiUsersIdRoute
  '/posts/$postId/deep': typeof PostsPostIdDeepRoute
  '/redirect/$target/via-beforeLoad': typeof RedirectTargetViaBeforeLoadRoute
  '/redirect/$target/via-loader': typeof RedirectTargetViaLoaderRoute
  '/redirect/$target': typeof RedirectTargetIndexRoute
  '/foo/$bar/$qux': typeof FooBarQuxHereIndexRoute
  '/redirect/$target/serverFn/via-beforeLoad': typeof RedirectTargetServerFnViaBeforeLoadRoute
  '/redirect/$target/serverFn/via-loader': typeof RedirectTargetServerFnViaLoaderRoute
  '/redirect/$target/serverFn/via-useServerFn': typeof RedirectTargetServerFnViaUseServerFnRoute
  '/redirect/$target/serverFn': typeof RedirectTargetServerFnIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/not-found': typeof NotFoundRouteRouteWithChildren
  '/search-params': typeof SearchParamsRouteRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/deferred': typeof DeferredRoute
  '/inline-scripts': typeof InlineScriptsRoute
  '/links': typeof LinksRoute
  '/posts': typeof PostsRouteWithChildren
  '/scripts': typeof ScriptsRoute
  '/stream': typeof StreamRoute
  '/users': typeof UsersRouteWithChildren
  '/대한민국': typeof Char45824Char54620Char48124Char44397Route
  '/_layout/_layout-2': typeof LayoutLayout2RouteWithChildren
  '/api/users': typeof ApiUsersRouteWithChildren
  '/not-found/via-beforeLoad': typeof NotFoundViaBeforeLoadRoute
  '/not-found/via-loader': typeof NotFoundViaLoaderRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/redirect/$target': typeof RedirectTargetRouteWithChildren
  '/search-params/default': typeof SearchParamsDefaultRoute
  '/search-params/loader-throws-redirect': typeof SearchParamsLoaderThrowsRedirectRoute
  '/users/$userId': typeof UsersUserIdRoute
  '/not-found/': typeof NotFoundIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/redirect/': typeof RedirectIndexRoute
  '/search-params/': typeof SearchParamsIndexRoute
  '/users/': typeof UsersIndexRoute
  '/_layout/_layout-2/layout-a': typeof LayoutLayout2LayoutARoute
  '/_layout/_layout-2/layout-b': typeof LayoutLayout2LayoutBRoute
  '/api/users/$id': typeof ApiUsersIdRoute
  '/posts_/$postId/deep': typeof PostsPostIdDeepRoute
  '/redirect/$target/via-beforeLoad': typeof RedirectTargetViaBeforeLoadRoute
  '/redirect/$target/via-loader': typeof RedirectTargetViaLoaderRoute
  '/redirect/$target/': typeof RedirectTargetIndexRoute
  '/foo/$bar/$qux': typeof FooBarQuxRouteWithChildren
  '/foo/$bar/$qux/_here': typeof FooBarQuxHereRouteWithChildren
  '/redirect/$target/serverFn/via-beforeLoad': typeof RedirectTargetServerFnViaBeforeLoadRoute
  '/redirect/$target/serverFn/via-loader': typeof RedirectTargetServerFnViaLoaderRoute
  '/redirect/$target/serverFn/via-useServerFn': typeof RedirectTargetServerFnViaUseServerFnRoute
  '/redirect/$target/serverFn/': typeof RedirectTargetServerFnIndexRoute
  '/foo/$bar/$qux/_here/': typeof FooBarQuxHereIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/not-found'
    | '/search-params'
    | '/deferred'
    | '/inline-scripts'
    | '/links'
    | '/posts'
    | '/scripts'
    | '/stream'
    | '/users'
    | '/대한민국'
    | '/api/users'
    | '/not-found/via-beforeLoad'
    | '/not-found/via-loader'
    | '/posts/$postId'
    | '/redirect/$target'
    | '/search-params/default'
    | '/search-params/loader-throws-redirect'
    | '/users/$userId'
    | '/not-found/'
    | '/posts/'
    | '/redirect'
    | '/search-params/'
    | '/users/'
    | '/layout-a'
    | '/layout-b'
    | '/api/users/$id'
    | '/posts/$postId/deep'
    | '/redirect/$target/via-beforeLoad'
    | '/redirect/$target/via-loader'
    | '/redirect/$target/'
    | '/foo/$bar/$qux'
    | '/redirect/$target/serverFn/via-beforeLoad'
    | '/redirect/$target/serverFn/via-loader'
    | '/redirect/$target/serverFn/via-useServerFn'
    | '/redirect/$target/serverFn'
    | '/foo/$bar/$qux/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/deferred'
    | '/inline-scripts'
    | '/links'
    | '/scripts'
    | '/stream'
    | '/대한민국'
    | '/api/users'
    | '/not-found/via-beforeLoad'
    | '/not-found/via-loader'
    | '/posts/$postId'
    | '/search-params/default'
    | '/search-params/loader-throws-redirect'
    | '/users/$userId'
    | '/not-found'
    | '/posts'
    | '/redirect'
    | '/search-params'
    | '/users'
    | '/layout-a'
    | '/layout-b'
    | '/api/users/$id'
    | '/posts/$postId/deep'
    | '/redirect/$target/via-beforeLoad'
    | '/redirect/$target/via-loader'
    | '/redirect/$target'
    | '/foo/$bar/$qux'
    | '/redirect/$target/serverFn/via-beforeLoad'
    | '/redirect/$target/serverFn/via-loader'
    | '/redirect/$target/serverFn/via-useServerFn'
    | '/redirect/$target/serverFn'
  id:
    | '__root__'
    | '/'
    | '/not-found'
    | '/search-params'
    | '/_layout'
    | '/deferred'
    | '/inline-scripts'
    | '/links'
    | '/posts'
    | '/scripts'
    | '/stream'
    | '/users'
    | '/대한민국'
    | '/_layout/_layout-2'
    | '/api/users'
    | '/not-found/via-beforeLoad'
    | '/not-found/via-loader'
    | '/posts/$postId'
    | '/redirect/$target'
    | '/search-params/default'
    | '/search-params/loader-throws-redirect'
    | '/users/$userId'
    | '/not-found/'
    | '/posts/'
    | '/redirect/'
    | '/search-params/'
    | '/users/'
    | '/_layout/_layout-2/layout-a'
    | '/_layout/_layout-2/layout-b'
    | '/api/users/$id'
    | '/posts_/$postId/deep'
    | '/redirect/$target/via-beforeLoad'
    | '/redirect/$target/via-loader'
    | '/redirect/$target/'
    | '/foo/$bar/$qux'
    | '/foo/$bar/$qux/_here'
    | '/redirect/$target/serverFn/via-beforeLoad'
    | '/redirect/$target/serverFn/via-loader'
    | '/redirect/$target/serverFn/via-useServerFn'
    | '/redirect/$target/serverFn/'
    | '/foo/$bar/$qux/_here/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotFoundRouteRoute: typeof NotFoundRouteRouteWithChildren
  SearchParamsRouteRoute: typeof SearchParamsRouteRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
  DeferredRoute: typeof DeferredRoute
  InlineScriptsRoute: typeof InlineScriptsRoute
  LinksRoute: typeof LinksRoute
  PostsRoute: typeof PostsRouteWithChildren
  ScriptsRoute: typeof ScriptsRoute
  StreamRoute: typeof StreamRoute
  UsersRoute: typeof UsersRouteWithChildren
  Char45824Char54620Char48124Char44397Route: typeof Char45824Char54620Char48124Char44397Route
  ApiUsersRoute: typeof ApiUsersRouteWithChildren
  RedirectTargetRoute: typeof RedirectTargetRouteWithChildren
  RedirectIndexRoute: typeof RedirectIndexRoute
  PostsPostIdDeepRoute: typeof PostsPostIdDeepRoute
  FooBarQuxRoute: typeof FooBarQuxRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/대한민국': {
      id: '/대한민국'
      path: '/대한민국'
      fullPath: '/대한민국'
      preLoaderRoute: typeof Char45824Char54620Char48124Char44397RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/stream': {
      id: '/stream'
      path: '/stream'
      fullPath: '/stream'
      preLoaderRoute: typeof StreamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/scripts': {
      id: '/scripts'
      path: '/scripts'
      fullPath: '/scripts'
      preLoaderRoute: typeof ScriptsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inline-scripts': {
      id: '/inline-scripts'
      path: '/inline-scripts'
      fullPath: '/inline-scripts'
      preLoaderRoute: typeof InlineScriptsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inline-scripts': {
      id: '/inline-scripts'
      path: '/inline-scripts'
      fullPath: '/inline-scripts'
      preLoaderRoute: typeof InlineScriptsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/links': {
      id: '/links'
      path: '/links'
      fullPath: '/links'
      preLoaderRoute: typeof LinksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof DeferredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search-params': {
      id: '/search-params'
      path: '/search-params'
      fullPath: '/search-params'
      preLoaderRoute: typeof SearchParamsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/not-found': {
      id: '/not-found'
      path: '/not-found'
      fullPath: '/not-found'
      preLoaderRoute: typeof NotFoundRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/': {
      id: '/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof UsersIndexRouteImport
      parentRoute: typeof UsersRoute
    }
    '/search-params/': {
      id: '/search-params/'
      path: '/'
      fullPath: '/search-params/'
      preLoaderRoute: typeof SearchParamsIndexRouteImport
      parentRoute: typeof SearchParamsRouteRoute
    }
    '/redirect/': {
      id: '/redirect/'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: typeof RedirectIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof PostsRoute
    }
    '/not-found/': {
      id: '/not-found/'
      path: '/'
      fullPath: '/not-found/'
      preLoaderRoute: typeof NotFoundIndexRouteImport
      parentRoute: typeof NotFoundRouteRoute
    }
    '/users/$userId': {
      id: '/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof UsersUserIdRouteImport
      parentRoute: typeof UsersRoute
    }
    '/search-params/loader-throws-redirect': {
      id: '/search-params/loader-throws-redirect'
      path: '/loader-throws-redirect'
      fullPath: '/search-params/loader-throws-redirect'
      preLoaderRoute: typeof SearchParamsLoaderThrowsRedirectRouteImport
      parentRoute: typeof SearchParamsRouteRoute
    }
    '/search-params/default': {
      id: '/search-params/default'
      path: '/default'
      fullPath: '/search-params/default'
      preLoaderRoute: typeof SearchParamsDefaultRouteImport
      parentRoute: typeof SearchParamsRouteRoute
    }
    '/redirect/$target': {
      id: '/redirect/$target'
      path: '/redirect/$target'
      fullPath: '/redirect/$target'
      preLoaderRoute: typeof RedirectTargetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof PostsRoute
    }
    '/not-found/via-loader': {
      id: '/not-found/via-loader'
      path: '/via-loader'
      fullPath: '/not-found/via-loader'
      preLoaderRoute: typeof NotFoundViaLoaderRouteImport
      parentRoute: typeof NotFoundRouteRoute
    }
    '/not-found/via-beforeLoad': {
      id: '/not-found/via-beforeLoad'
      path: '/via-beforeLoad'
      fullPath: '/not-found/via-beforeLoad'
      preLoaderRoute: typeof NotFoundViaBeforeLoadRouteImport
      parentRoute: typeof NotFoundRouteRoute
    }
    '/api/users': {
      id: '/api/users'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/_layout-2': {
      id: '/_layout/_layout-2'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutLayout2RouteImport
      parentRoute: typeof LayoutRoute
    }
    '/foo/$bar/$qux': {
      id: '/foo/$bar/$qux'
      path: '/foo/$bar/$qux'
      fullPath: '/foo/$bar/$qux'
      preLoaderRoute: typeof FooBarQuxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/redirect/$target/': {
      id: '/redirect/$target/'
      path: '/'
      fullPath: '/redirect/$target/'
      preLoaderRoute: typeof RedirectTargetIndexRouteImport
      parentRoute: typeof RedirectTargetRoute
    }
    '/redirect/$target/via-loader': {
      id: '/redirect/$target/via-loader'
      path: '/via-loader'
      fullPath: '/redirect/$target/via-loader'
      preLoaderRoute: typeof RedirectTargetViaLoaderRouteImport
      parentRoute: typeof RedirectTargetRoute
    }
    '/redirect/$target/via-beforeLoad': {
      id: '/redirect/$target/via-beforeLoad'
      path: '/via-beforeLoad'
      fullPath: '/redirect/$target/via-beforeLoad'
      preLoaderRoute: typeof RedirectTargetViaBeforeLoadRouteImport
      parentRoute: typeof RedirectTargetRoute
    }
    '/posts_/$postId/deep': {
      id: '/posts_/$postId/deep'
      path: '/posts/$postId/deep'
      fullPath: '/posts/$postId/deep'
      preLoaderRoute: typeof PostsPostIdDeepRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/users/$id': {
      id: '/api/users/$id'
      path: '/$id'
      fullPath: '/api/users/$id'
      preLoaderRoute: typeof ApiUsersIdRouteImport
      parentRoute: typeof ApiUsersRoute
    }
    '/_layout/_layout-2/layout-b': {
      id: '/_layout/_layout-2/layout-b'
      path: '/layout-b'
      fullPath: '/layout-b'
      preLoaderRoute: typeof LayoutLayout2LayoutBRouteImport
      parentRoute: typeof LayoutLayout2Route
    }
    '/_layout/_layout-2/layout-a': {
      id: '/_layout/_layout-2/layout-a'
      path: '/layout-a'
      fullPath: '/layout-a'
      preLoaderRoute: typeof LayoutLayout2LayoutARouteImport
      parentRoute: typeof LayoutLayout2Route
    }
    '/redirect/$target/serverFn/': {
      id: '/redirect/$target/serverFn/'
      path: '/serverFn'
      fullPath: '/redirect/$target/serverFn'
      preLoaderRoute: typeof RedirectTargetServerFnIndexRouteImport
      parentRoute: typeof RedirectTargetRoute
    }
    '/redirect/$target/serverFn/via-useServerFn': {
      id: '/redirect/$target/serverFn/via-useServerFn'
      path: '/serverFn/via-useServerFn'
      fullPath: '/redirect/$target/serverFn/via-useServerFn'
      preLoaderRoute: typeof RedirectTargetServerFnViaUseServerFnRouteImport
      parentRoute: typeof RedirectTargetRoute
    }
    '/redirect/$target/serverFn/via-loader': {
      id: '/redirect/$target/serverFn/via-loader'
      path: '/serverFn/via-loader'
      fullPath: '/redirect/$target/serverFn/via-loader'
      preLoaderRoute: typeof RedirectTargetServerFnViaLoaderRouteImport
      parentRoute: typeof RedirectTargetRoute
    }
    '/redirect/$target/serverFn/via-beforeLoad': {
      id: '/redirect/$target/serverFn/via-beforeLoad'
      path: '/serverFn/via-beforeLoad'
      fullPath: '/redirect/$target/serverFn/via-beforeLoad'
      preLoaderRoute: typeof RedirectTargetServerFnViaBeforeLoadRouteImport
      parentRoute: typeof RedirectTargetRoute
    '/foo/$bar/$qux/_here/': {
      id: '/foo/$bar/$qux/_here/'
      path: '/'
      fullPath: '/foo/$bar/$qux/'
      preLoaderRoute: typeof FooBarQuxHereIndexRouteImport
      parentRoute: typeof FooBarQuxHereRoute
    }
    '/foo/$bar/$qux': {
      id: '/foo/$bar/$qux'
      path: '/foo/$bar/$qux'
      fullPath: '/foo/$bar/$qux'
      preLoaderRoute: typeof FooBarQuxRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/not-found': {
      id: '/not-found'
      path: '/not-found'
      fullPath: '/not-found'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/search-params': {
      id: '/search-params'
      path: '/search-params'
      fullPath: '/search-params'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/inline-scripts': {
      id: '/inline-scripts'
      path: '/inline-scripts'
      fullPath: '/inline-scripts'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/links': {
      id: '/links'
      path: '/links'
      fullPath: '/links'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/scripts': {
      id: '/scripts'
      path: '/scripts'
      fullPath: '/scripts'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/stream': {
      id: '/stream'
      path: '/stream'
      fullPath: '/stream'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/대한민국': {
      id: '/대한민국'
      path: '/대한민국'
      fullPath: '/대한민국'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_layout/_layout-2': {
      id: '/_layout/_layout-2'
      path: ''
      fullPath: ''
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users': {
      id: '/api/users'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/not-found/via-beforeLoad': {
      id: '/not-found/via-beforeLoad'
      path: '/via-beforeLoad'
      fullPath: '/not-found/via-beforeLoad'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/not-found/via-loader': {
      id: '/not-found/via-loader'
      path: '/via-loader'
      fullPath: '/not-found/via-loader'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/redirect/$target': {
      id: '/redirect/$target'
      path: '/redirect/$target'
      fullPath: '/redirect/$target'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/search-params/default': {
      id: '/search-params/default'
      path: '/default'
      fullPath: '/search-params/default'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/search-params/loader-throws-redirect': {
      id: '/search-params/loader-throws-redirect'
      path: '/loader-throws-redirect'
      fullPath: '/search-params/loader-throws-redirect'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/users/$userId': {
      id: '/users/$userId'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/not-found/': {
      id: '/not-found/'
      path: '/'
      fullPath: '/not-found/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/redirect/': {
      id: '/redirect/'
      path: '/redirect'
      fullPath: '/redirect'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/search-params/': {
      id: '/search-params/'
      path: '/'
      fullPath: '/search-params/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/users/': {
      id: '/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_layout/_layout-2/layout-a': {
      id: '/_layout/_layout-2/layout-a'
      path: '/layout-a'
      fullPath: '/layout-a'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/_layout/_layout-2/layout-b': {
      id: '/_layout/_layout-2/layout-b'
      path: '/layout-b'
      fullPath: '/layout-b'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/$id': {
      id: '/api/users/$id'
      path: '/$id'
      fullPath: '/api/users/$id'
      preLoaderRoute: typeof ApiUsersIdServerRouteImport
      parentRoute: typeof ApiUsersServerRoute
    }
    '/posts_/$postId/deep': {
      id: '/posts_/$postId/deep'
      path: '/posts/$postId/deep'
      fullPath: '/posts/$postId/deep'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/redirect/$target/via-beforeLoad': {
      id: '/redirect/$target/via-beforeLoad'
      path: '/via-beforeLoad'
      fullPath: '/redirect/$target/via-beforeLoad'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/redirect/$target/via-loader': {
      id: '/redirect/$target/via-loader'
      path: '/via-loader'
      fullPath: '/redirect/$target/via-loader'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/redirect/$target/': {
      id: '/redirect/$target/'
      path: '/'
      fullPath: '/redirect/$target/'
      preLoaderRoute: unknown
      parentRoute: typeof rootServerRouteImport
    }
    '/foo/$bar/$qux/_here': {
      id: '/foo/$bar/$qux/_here'
      path: '/foo/$bar/$qux'
      fullPath: '/foo/$bar/$qux'
      preLoaderRoute: typeof FooBarQuxHereRouteImport
      parentRoute: typeof FooBarQuxRoute
    }
    '/foo/$bar/$qux/_here/': {
      id: '/foo/$bar/$qux/_here/'
      path: '/'
      fullPath: '/foo/$bar/$qux/'
      preLoaderRoute: typeof FooBarQuxHereIndexRouteImport
      parentRoute: typeof FooBarQuxHereRoute
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/not-found/route' {
  const createFileRoute: CreateFileRoute<
    '/not-found',
    FileRoutesByPath['/not-found']['parentRoute'],
    FileRoutesByPath['/not-found']['id'],
    FileRoutesByPath['/not-found']['path'],
    FileRoutesByPath['/not-found']['fullPath']
  >
}
declare module './routes/search-params/route' {
  const createFileRoute: CreateFileRoute<
    '/search-params',
    FileRoutesByPath['/search-params']['parentRoute'],
    FileRoutesByPath['/search-params']['id'],
    FileRoutesByPath['/search-params']['path'],
    FileRoutesByPath['/search-params']['fullPath']
  >
}
declare module './routes/_layout' {
  const createFileRoute: CreateFileRoute<
    '/_layout',
    FileRoutesByPath['/_layout']['parentRoute'],
    FileRoutesByPath['/_layout']['id'],
    FileRoutesByPath['/_layout']['path'],
    FileRoutesByPath['/_layout']['fullPath']
  >
}
declare module './routes/deferred' {
  const createFileRoute: CreateFileRoute<
    '/deferred',
    FileRoutesByPath['/deferred']['parentRoute'],
    FileRoutesByPath['/deferred']['id'],
    FileRoutesByPath['/deferred']['path'],
    FileRoutesByPath['/deferred']['fullPath']
  >

  const createServerFileRoute: CreateServerFileRoute<
    ServerFileRoutesByPath['/deferred']['parentRoute'],
    ServerFileRoutesByPath['/deferred']['id'],
    ServerFileRoutesByPath['/deferred']['path'],
    ServerFileRoutesByPath['/deferred']['fullPath'],
    unknown
  >
}
declare module './routes/inline-scripts' {
  const createFileRoute: CreateFileRoute<
    '/inline-scripts',
    FileRoutesByPath['/inline-scripts']['parentRoute'],
    FileRoutesByPath['/inline-scripts']['id'],
    FileRoutesByPath['/inline-scripts']['path'],
    FileRoutesByPath['/inline-scripts']['fullPath']
  >

  const createServerFileRoute: CreateServerFileRoute<
    ServerFileRoutesByPath['/inline-scripts']['parentRoute'],
    ServerFileRoutesByPath['/inline-scripts']['id'],
    ServerFileRoutesByPath['/inline-scripts']['path'],
    ServerFileRoutesByPath['/inline-scripts']['fullPath'],
    unknown
  >
}
declare module './routes/links' {
  const createFileRoute: CreateFileRoute<
    '/links',
    FileRoutesByPath['/links']['parentRoute'],
    FileRoutesByPath['/links']['id'],
    FileRoutesByPath['/links']['path'],
    FileRoutesByPath['/links']['fullPath']
  >
}
declare module './routes/posts' {
  const createFileRoute: CreateFileRoute<
    '/posts',
    FileRoutesByPath['/posts']['parentRoute'],
    FileRoutesByPath['/posts']['id'],
    FileRoutesByPath['/posts']['path'],
    FileRoutesByPath['/posts']['fullPath']
  >
}
declare module './routes/scripts' {
  const createFileRoute: CreateFileRoute<
    '/scripts',
    FileRoutesByPath['/scripts']['parentRoute'],
    FileRoutesByPath['/scripts']['id'],
    FileRoutesByPath['/scripts']['path'],
    FileRoutesByPath['/scripts']['fullPath']
  >
}
declare module './routes/stream' {
  const createFileRoute: CreateFileRoute<
    '/stream',
    FileRoutesByPath['/stream']['parentRoute'],
    FileRoutesByPath['/stream']['id'],
    FileRoutesByPath['/stream']['path'],
    FileRoutesByPath['/stream']['fullPath']
  >
}
declare module './routes/users' {
  const createFileRoute: CreateFileRoute<
    '/users',
    FileRoutesByPath['/users']['parentRoute'],
    FileRoutesByPath['/users']['id'],
    FileRoutesByPath['/users']['path'],
    FileRoutesByPath['/users']['fullPath']
  >
}
declare module './routes/대한민국' {
  const createFileRoute: CreateFileRoute<
    '/대한민국',
    FileRoutesByPath['/대한민국']['parentRoute'],
    FileRoutesByPath['/대한민국']['id'],
    FileRoutesByPath['/대한민국']['path'],
    FileRoutesByPath['/대한민국']['fullPath']
  >
}
declare module './routes/_layout/_layout-2' {
  const createFileRoute: CreateFileRoute<
    '/_layout/_layout-2',
    FileRoutesByPath['/_layout/_layout-2']['parentRoute'],
    FileRoutesByPath['/_layout/_layout-2']['id'],
    FileRoutesByPath['/_layout/_layout-2']['path'],
    FileRoutesByPath['/_layout/_layout-2']['fullPath']
  >
}
declare module './routes/api.users' {
  const createFileRoute: CreateFileRoute<
    '/api/users',
    FileRoutesByPath['/api/users']['parentRoute'],
    FileRoutesByPath['/api/users']['id'],
    FileRoutesByPath['/api/users']['path'],
    FileRoutesByPath['/api/users']['fullPath']
  >
}
declare module './routes/not-found/via-beforeLoad' {
  const createFileRoute: CreateFileRoute<
    '/not-found/via-beforeLoad',
    FileRoutesByPath['/not-found/via-beforeLoad']['parentRoute'],
    FileRoutesByPath['/not-found/via-beforeLoad']['id'],
    FileRoutesByPath['/not-found/via-beforeLoad']['path'],
    FileRoutesByPath['/not-found/via-beforeLoad']['fullPath']
  >
}
declare module './routes/not-found/via-loader' {
  const createFileRoute: CreateFileRoute<
    '/not-found/via-loader',
    FileRoutesByPath['/not-found/via-loader']['parentRoute'],
    FileRoutesByPath['/not-found/via-loader']['id'],
    FileRoutesByPath['/not-found/via-loader']['path'],
    FileRoutesByPath['/not-found/via-loader']['fullPath']
  >
}
declare module './routes/posts.$postId' {
  const createFileRoute: CreateFileRoute<
    '/posts/$postId',
    FileRoutesByPath['/posts/$postId']['parentRoute'],
    FileRoutesByPath['/posts/$postId']['id'],
    FileRoutesByPath['/posts/$postId']['path'],
    FileRoutesByPath['/posts/$postId']['fullPath']
  >
}
declare module './routes/redirect/$target' {
  const createFileRoute: CreateFileRoute<
    '/redirect/$target',
    FileRoutesByPath['/redirect/$target']['parentRoute'],
    FileRoutesByPath['/redirect/$target']['id'],
    FileRoutesByPath['/redirect/$target']['path'],
    FileRoutesByPath['/redirect/$target']['fullPath']
  >
}
declare module './routes/search-params/default' {
  const createFileRoute: CreateFileRoute<
    '/search-params/default',
    FileRoutesByPath['/search-params/default']['parentRoute'],
    FileRoutesByPath['/search-params/default']['id'],
    FileRoutesByPath['/search-params/default']['path'],
    FileRoutesByPath['/search-params/default']['fullPath']
  >
}
declare module './routes/search-params/loader-throws-redirect' {
  const createFileRoute: CreateFileRoute<
    '/search-params/loader-throws-redirect',
    FileRoutesByPath['/search-params/loader-throws-redirect']['parentRoute'],
    FileRoutesByPath['/search-params/loader-throws-redirect']['id'],
    FileRoutesByPath['/search-params/loader-throws-redirect']['path'],
    FileRoutesByPath['/search-params/loader-throws-redirect']['fullPath']
  >
}
declare module './routes/users.$userId' {
  const createFileRoute: CreateFileRoute<
    '/users/$userId',
    FileRoutesByPath['/users/$userId']['parentRoute'],
    FileRoutesByPath['/users/$userId']['id'],
    FileRoutesByPath['/users/$userId']['path'],
    FileRoutesByPath['/users/$userId']['fullPath']
  >
}
declare module './routes/not-found/index' {
  const createFileRoute: CreateFileRoute<
    '/not-found/',
    FileRoutesByPath['/not-found/']['parentRoute'],
    FileRoutesByPath['/not-found/']['id'],
    FileRoutesByPath['/not-found/']['path'],
    FileRoutesByPath['/not-found/']['fullPath']
  >
}
declare module './routes/posts.index' {
  const createFileRoute: CreateFileRoute<
    '/posts/',
    FileRoutesByPath['/posts/']['parentRoute'],
    FileRoutesByPath['/posts/']['id'],
    FileRoutesByPath['/posts/']['path'],
    FileRoutesByPath['/posts/']['fullPath']
  >
}
declare module './routes/redirect/index' {
  const createFileRoute: CreateFileRoute<
    '/redirect/',
    FileRoutesByPath['/redirect/']['parentRoute'],
    FileRoutesByPath['/redirect/']['id'],
    FileRoutesByPath['/redirect/']['path'],
    FileRoutesByPath['/redirect/']['fullPath']
  >
}
declare module './routes/search-params/index' {
  const createFileRoute: CreateFileRoute<
    '/search-params/',
    FileRoutesByPath['/search-params/']['parentRoute'],
    FileRoutesByPath['/search-params/']['id'],
    FileRoutesByPath['/search-params/']['path'],
    FileRoutesByPath['/search-params/']['fullPath']
  >
}
declare module './routes/users.index' {
  const createFileRoute: CreateFileRoute<
    '/users/',
    FileRoutesByPath['/users/']['parentRoute'],
    FileRoutesByPath['/users/']['id'],
    FileRoutesByPath['/users/']['path'],
    FileRoutesByPath['/users/']['fullPath']
  >
}
declare module './routes/_layout/_layout-2/layout-a' {
  const createFileRoute: CreateFileRoute<
    '/_layout/_layout-2/layout-a',
    FileRoutesByPath['/_layout/_layout-2/layout-a']['parentRoute'],
    FileRoutesByPath['/_layout/_layout-2/layout-a']['id'],
    FileRoutesByPath['/_layout/_layout-2/layout-a']['path'],
    FileRoutesByPath['/_layout/_layout-2/layout-a']['fullPath']
  >
}
declare module './routes/_layout/_layout-2/layout-b' {
  const createFileRoute: CreateFileRoute<
    '/_layout/_layout-2/layout-b',
    FileRoutesByPath['/_layout/_layout-2/layout-b']['parentRoute'],
    FileRoutesByPath['/_layout/_layout-2/layout-b']['id'],
    FileRoutesByPath['/_layout/_layout-2/layout-b']['path'],
    FileRoutesByPath['/_layout/_layout-2/layout-b']['fullPath']
  >
}
declare module './routes/api/users.$id' {
  const createFileRoute: CreateFileRoute<
    '/api/users/$id',
    FileRoutesByPath['/api/users/$id']['parentRoute'],
    FileRoutesByPath['/api/users/$id']['id'],
    FileRoutesByPath['/api/users/$id']['path'],
    FileRoutesByPath['/api/users/$id']['fullPath']
  >
}
declare module './routes/posts_.$postId.deep' {
  const createFileRoute: CreateFileRoute<
    '/posts_/$postId/deep',
    FileRoutesByPath['/posts_/$postId/deep']['parentRoute'],
    FileRoutesByPath['/posts_/$postId/deep']['id'],
    FileRoutesByPath['/posts_/$postId/deep']['path'],
    FileRoutesByPath['/posts_/$postId/deep']['fullPath']
  >
}
declare module './routes/redirect/$target/via-beforeLoad' {
  const createFileRoute: CreateFileRoute<
    '/redirect/$target/via-beforeLoad',
    FileRoutesByPath['/redirect/$target/via-beforeLoad']['parentRoute'],
    FileRoutesByPath['/redirect/$target/via-beforeLoad']['id'],
    FileRoutesByPath['/redirect/$target/via-beforeLoad']['path'],
    FileRoutesByPath['/redirect/$target/via-beforeLoad']['fullPath']
  >
}
declare module './routes/redirect/$target/via-loader' {
  const createFileRoute: CreateFileRoute<
    '/redirect/$target/via-loader',
    FileRoutesByPath['/redirect/$target/via-loader']['parentRoute'],
    FileRoutesByPath['/redirect/$target/via-loader']['id'],
    FileRoutesByPath['/redirect/$target/via-loader']['path'],
    FileRoutesByPath['/redirect/$target/via-loader']['fullPath']
  >
}
declare module './routes/redirect/$target/index' {
  const createFileRoute: CreateFileRoute<
    '/redirect/$target/',
    FileRoutesByPath['/redirect/$target/']['parentRoute'],
    FileRoutesByPath['/redirect/$target/']['id'],
    FileRoutesByPath['/redirect/$target/']['path'],
    FileRoutesByPath['/redirect/$target/']['fullPath']
  >
}
declare module './routes/foo/$bar/$qux/_here' {
  const createFileRoute: CreateFileRoute<
    '/foo/$bar/$qux/_here',
    FileRoutesByPath['/foo/$bar/$qux/_here']['parentRoute'],
    FileRoutesByPath['/foo/$bar/$qux/_here']['id'],
    FileRoutesByPath['/foo/$bar/$qux/_here']['path'],
    FileRoutesByPath['/foo/$bar/$qux/_here']['fullPath']
  >
}
declare module './routes/redirect/$target/serverFn/via-beforeLoad' {
  const createFileRoute: CreateFileRoute<
    '/redirect/$target/serverFn/via-beforeLoad',
    FileRoutesByPath['/redirect/$target/serverFn/via-beforeLoad']['parentRoute'],
    FileRoutesByPath['/redirect/$target/serverFn/via-beforeLoad']['id'],
    FileRoutesByPath['/redirect/$target/serverFn/via-beforeLoad']['path'],
    FileRoutesByPath['/redirect/$target/serverFn/via-beforeLoad']['fullPath']
  >
}
declare module './routes/redirect/$target/serverFn/via-loader' {
  const createFileRoute: CreateFileRoute<
    '/redirect/$target/serverFn/via-loader',
    FileRoutesByPath['/redirect/$target/serverFn/via-loader']['parentRoute'],
    FileRoutesByPath['/redirect/$target/serverFn/via-loader']['id'],
    FileRoutesByPath['/redirect/$target/serverFn/via-loader']['path'],
    FileRoutesByPath['/redirect/$target/serverFn/via-loader']['fullPath']
  >
}
declare module './routes/redirect/$target/serverFn/via-useServerFn' {
  const createFileRoute: CreateFileRoute<
    '/redirect/$target/serverFn/via-useServerFn',
    FileRoutesByPath['/redirect/$target/serverFn/via-useServerFn']['parentRoute'],
    FileRoutesByPath['/redirect/$target/serverFn/via-useServerFn']['id'],
    FileRoutesByPath['/redirect/$target/serverFn/via-useServerFn']['path'],
    FileRoutesByPath['/redirect/$target/serverFn/via-useServerFn']['fullPath']
  >
}
declare module './routes/redirect/$target/serverFn/index' {
  const createFileRoute: CreateFileRoute<
    '/redirect/$target/serverFn/',
    FileRoutesByPath['/redirect/$target/serverFn/']['parentRoute'],
    FileRoutesByPath['/redirect/$target/serverFn/']['id'],
    FileRoutesByPath['/redirect/$target/serverFn/']['path'],
    FileRoutesByPath['/redirect/$target/serverFn/']['fullPath']
  >
}
declare module './routes/foo/$bar/$qux/_here/index' {
  const createFileRoute: CreateFileRoute<
    '/foo/$bar/$qux/_here/',
    FileRoutesByPath['/foo/$bar/$qux/_here/']['parentRoute'],
    FileRoutesByPath['/foo/$bar/$qux/_here/']['id'],
    FileRoutesByPath['/foo/$bar/$qux/_here/']['path'],
    FileRoutesByPath['/foo/$bar/$qux/_here/']['fullPath']
  >
}

interface NotFoundRouteRouteChildren {
  NotFoundViaBeforeLoadRoute: typeof NotFoundViaBeforeLoadRoute
  NotFoundViaLoaderRoute: typeof NotFoundViaLoaderRoute
  NotFoundIndexRoute: typeof NotFoundIndexRoute
}

const NotFoundRouteRouteChildren: NotFoundRouteRouteChildren = {
  NotFoundViaBeforeLoadRoute: NotFoundViaBeforeLoadRoute,
  NotFoundViaLoaderRoute: NotFoundViaLoaderRoute,
  NotFoundIndexRoute: NotFoundIndexRoute,
}

const NotFoundRouteRouteWithChildren = NotFoundRouteRoute._addFileChildren(
  NotFoundRouteRouteChildren,
)

interface SearchParamsRouteRouteChildren {
  SearchParamsDefaultRoute: typeof SearchParamsDefaultRoute
  SearchParamsLoaderThrowsRedirectRoute: typeof SearchParamsLoaderThrowsRedirectRoute
  SearchParamsIndexRoute: typeof SearchParamsIndexRoute
}

const SearchParamsRouteRouteChildren: SearchParamsRouteRouteChildren = {
  SearchParamsDefaultRoute: SearchParamsDefaultRoute,
  SearchParamsLoaderThrowsRedirectRoute: SearchParamsLoaderThrowsRedirectRoute,
  SearchParamsIndexRoute: SearchParamsIndexRoute,
}

const SearchParamsRouteRouteWithChildren =
  SearchParamsRouteRoute._addFileChildren(SearchParamsRouteRouteChildren)

interface LayoutLayout2RouteChildren {
  LayoutLayout2LayoutARoute: typeof LayoutLayout2LayoutARoute
  LayoutLayout2LayoutBRoute: typeof LayoutLayout2LayoutBRoute
}

const LayoutLayout2RouteChildren: LayoutLayout2RouteChildren = {
  LayoutLayout2LayoutARoute: LayoutLayout2LayoutARoute,
  LayoutLayout2LayoutBRoute: LayoutLayout2LayoutBRoute,
}

const LayoutLayout2RouteWithChildren = LayoutLayout2Route._addFileChildren(
  LayoutLayout2RouteChildren,
)

interface LayoutRouteChildren {
  LayoutLayout2Route: typeof LayoutLayout2RouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutLayout2Route: LayoutLayout2RouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

interface PostsRouteChildren {
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const PostsRouteChildren: PostsRouteChildren = {
  PostsPostIdRoute: PostsPostIdRoute,
  PostsIndexRoute: PostsIndexRoute,
}

const PostsRouteWithChildren = PostsRoute._addFileChildren(PostsRouteChildren)

interface UsersRouteChildren {
  UsersUserIdRoute: typeof UsersUserIdRoute
  UsersIndexRoute: typeof UsersIndexRoute
}

const UsersRouteChildren: UsersRouteChildren = {
  UsersUserIdRoute: UsersUserIdRoute,
  UsersIndexRoute: UsersIndexRoute,
}

const UsersRouteWithChildren = UsersRoute._addFileChildren(UsersRouteChildren)

interface ApiUsersRouteChildren {
  ApiUsersIdRoute: typeof ApiUsersIdRoute
}

const ApiUsersRouteChildren: ApiUsersRouteChildren = {
  ApiUsersIdRoute: ApiUsersIdRoute,
}

const ApiUsersRouteWithChildren = ApiUsersRoute._addFileChildren(
  ApiUsersRouteChildren,
)

interface RedirectTargetRouteChildren {
  RedirectTargetViaBeforeLoadRoute: typeof RedirectTargetViaBeforeLoadRoute
  RedirectTargetViaLoaderRoute: typeof RedirectTargetViaLoaderRoute
  RedirectTargetIndexRoute: typeof RedirectTargetIndexRoute
  RedirectTargetServerFnViaBeforeLoadRoute: typeof RedirectTargetServerFnViaBeforeLoadRoute
  RedirectTargetServerFnViaLoaderRoute: typeof RedirectTargetServerFnViaLoaderRoute
  RedirectTargetServerFnViaUseServerFnRoute: typeof RedirectTargetServerFnViaUseServerFnRoute
  RedirectTargetServerFnIndexRoute: typeof RedirectTargetServerFnIndexRoute
}

const RedirectTargetRouteChildren: RedirectTargetRouteChildren = {
  RedirectTargetViaBeforeLoadRoute: RedirectTargetViaBeforeLoadRoute,
  RedirectTargetViaLoaderRoute: RedirectTargetViaLoaderRoute,
  RedirectTargetIndexRoute: RedirectTargetIndexRoute,
  RedirectTargetServerFnViaBeforeLoadRoute:
    RedirectTargetServerFnViaBeforeLoadRoute,
  RedirectTargetServerFnViaLoaderRoute: RedirectTargetServerFnViaLoaderRoute,
  RedirectTargetServerFnViaUseServerFnRoute:
    RedirectTargetServerFnViaUseServerFnRoute,
  RedirectTargetServerFnIndexRoute: RedirectTargetServerFnIndexRoute,
}

const RedirectTargetRouteWithChildren = RedirectTargetRoute._addFileChildren(
  RedirectTargetRouteChildren,
)

interface FooBarQuxHereRouteChildren {
  FooBarQuxHereIndexRoute: typeof FooBarQuxHereIndexRoute
}

const FooBarQuxHereRouteChildren: FooBarQuxHereRouteChildren = {
  FooBarQuxHereIndexRoute: FooBarQuxHereIndexRoute,
}

const FooBarQuxHereRouteWithChildren = FooBarQuxHereRoute._addFileChildren(
  FooBarQuxHereRouteChildren,
)

interface FooBarQuxRouteChildren {
  FooBarQuxHereRoute: typeof FooBarQuxHereRouteWithChildren
}

const FooBarQuxRouteChildren: FooBarQuxRouteChildren = {
  FooBarQuxHereRoute: FooBarQuxHereRouteWithChildren,
}

const FooBarQuxRouteWithChildren = FooBarQuxRoute._addFileChildren(
  FooBarQuxRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotFoundRouteRoute: NotFoundRouteRouteWithChildren,
  SearchParamsRouteRoute: SearchParamsRouteRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
  DeferredRoute: DeferredRoute,
  InlineScriptsRoute: InlineScriptsRoute,
  LinksRoute: LinksRoute,
  PostsRoute: PostsRouteWithChildren,
  ScriptsRoute: ScriptsRoute,
  StreamRoute: StreamRoute,
  UsersRoute: UsersRouteWithChildren,
  Char45824Char54620Char48124Char44397Route:
    Char45824Char54620Char48124Char44397Route,
  ApiUsersRoute: ApiUsersRouteWithChildren,
  RedirectTargetRoute: RedirectTargetRouteWithChildren,
  RedirectIndexRoute: RedirectIndexRoute,
  PostsPostIdDeepRoute: PostsPostIdDeepRoute,
  FooBarQuxRoute: FooBarQuxRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
