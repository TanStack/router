/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'
import type {
  CreateServerFileRoute,
  ServerFileRoutesByPath,
} from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogChar123CategoryChar125RouteImport } from './routes/blog.{-$category}'
import { Route as UsersIdChar123TabChar125RouteImport } from './routes/users.$id.{-$tab}'
import { Route as ApiVChar123VersionChar125Char123EndpointChar125RouteImport } from './routes/api.v{-$version}.{-$endpoint}'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogChar123CategoryChar125Route =
  BlogChar123CategoryChar125RouteImport.update({
    id: '/blog/{-$category}',
    path: '/blog/{-$category}',
    getParentRoute: () => rootRouteImport,
  } as any)
const UsersIdChar123TabChar125Route =
  UsersIdChar123TabChar125RouteImport.update({
    id: '/users/$id/{-$tab}',
    path: '/users/$id/{-$tab}',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiVChar123VersionChar125Char123EndpointChar125Route =
  ApiVChar123VersionChar125Char123EndpointChar125RouteImport.update({
    id: '/api/v{-$version}/{-$endpoint}',
    path: '/api/v{-$version}/{-$endpoint}',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog/{-$category}': typeof BlogChar123CategoryChar125Route
  '/api/v{-$version}/{-$endpoint}': typeof ApiVChar123VersionChar125Char123EndpointChar125Route
  '/users/$id/{-$tab}': typeof UsersIdChar123TabChar125Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog/{-$category}': typeof BlogChar123CategoryChar125Route
  '/api/v{-$version}/{-$endpoint}': typeof ApiVChar123VersionChar125Char123EndpointChar125Route
  '/users/$id/{-$tab}': typeof UsersIdChar123TabChar125Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/blog/{-$category}': typeof BlogChar123CategoryChar125Route
  '/api/v{-$version}/{-$endpoint}': typeof ApiVChar123VersionChar125Char123EndpointChar125Route
  '/users/$id/{-$tab}': typeof UsersIdChar123TabChar125Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog/{-$category}'
    | '/api/v{-$version}/{-$endpoint}'
    | '/users/$id/{-$tab}'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog/{-$category}'
    | '/api/v{-$version}/{-$endpoint}'
    | '/users/$id/{-$tab}'
  id:
    | '__root__'
    | '/'
    | '/blog/{-$category}'
    | '/api/v{-$version}/{-$endpoint}'
    | '/users/$id/{-$tab}'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogChar123CategoryChar125Route: typeof BlogChar123CategoryChar125Route
  ApiVChar123VersionChar125Char123EndpointChar125Route: typeof ApiVChar123VersionChar125Char123EndpointChar125Route
  UsersIdChar123TabChar125Route: typeof UsersIdChar123TabChar125Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blog/{-$category}': {
      id: '/blog/{-$category}'
      path: '/blog/{-$category}'
      fullPath: '/blog/{-$category}'
      preLoaderRoute: typeof BlogChar123CategoryChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/v{-$version}/{-$endpoint}': {
      id: '/api/v{-$version}/{-$endpoint}'
      path: '/api/v{-$version}/{-$endpoint}'
      fullPath: '/api/v{-$version}/{-$endpoint}'
      preLoaderRoute: typeof ApiVChar123VersionChar125Char123EndpointChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/$id/{-$tab}': {
      id: '/users/$id/{-$tab}'
      path: '/users/$id/{-$tab}'
      fullPath: '/users/$id/{-$tab}'
      preLoaderRoute: typeof UsersIdChar123TabChar125RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >

  const createServerFileRoute: CreateServerFileRoute<
    ServerFileRoutesByPath['/']['parentRoute'],
    ServerFileRoutesByPath['/']['id'],
    ServerFileRoutesByPath['/']['path'],
    ServerFileRoutesByPath['/']['fullPath'],
    unknown
  >
}
declare module './routes/blog.{-$category}' {
  const createFileRoute: CreateFileRoute<
    '/blog/{-$category}',
    FileRoutesByPath['/blog/{-$category}']['parentRoute'],
    FileRoutesByPath['/blog/{-$category}']['id'],
    FileRoutesByPath['/blog/{-$category}']['path'],
    FileRoutesByPath['/blog/{-$category}']['fullPath']
  >

  const createServerFileRoute: CreateServerFileRoute<
    ServerFileRoutesByPath['/blog/{-$category}']['parentRoute'],
    ServerFileRoutesByPath['/blog/{-$category}']['id'],
    ServerFileRoutesByPath['/blog/{-$category}']['path'],
    ServerFileRoutesByPath['/blog/{-$category}']['fullPath'],
    unknown
  >
}
declare module './routes/api.v{-$version}.{-$endpoint}' {
  const createFileRoute: CreateFileRoute<
    '/api/v{-$version}/{-$endpoint}',
    FileRoutesByPath['/api/v{-$version}/{-$endpoint}']['parentRoute'],
    FileRoutesByPath['/api/v{-$version}/{-$endpoint}']['id'],
    FileRoutesByPath['/api/v{-$version}/{-$endpoint}']['path'],
    FileRoutesByPath['/api/v{-$version}/{-$endpoint}']['fullPath']
  >

  const createServerFileRoute: CreateServerFileRoute<
    ServerFileRoutesByPath['/api/v{-$version}/{-$endpoint}']['parentRoute'],
    ServerFileRoutesByPath['/api/v{-$version}/{-$endpoint}']['id'],
    ServerFileRoutesByPath['/api/v{-$version}/{-$endpoint}']['path'],
    ServerFileRoutesByPath['/api/v{-$version}/{-$endpoint}']['fullPath'],
    unknown
  >
}
declare module './routes/users.$id.{-$tab}' {
  const createFileRoute: CreateFileRoute<
    '/users/$id/{-$tab}',
    FileRoutesByPath['/users/$id/{-$tab}']['parentRoute'],
    FileRoutesByPath['/users/$id/{-$tab}']['id'],
    FileRoutesByPath['/users/$id/{-$tab}']['path'],
    FileRoutesByPath['/users/$id/{-$tab}']['fullPath']
  >

  const createServerFileRoute: CreateServerFileRoute<
    ServerFileRoutesByPath['/users/$id/{-$tab}']['parentRoute'],
    ServerFileRoutesByPath['/users/$id/{-$tab}']['id'],
    ServerFileRoutesByPath['/users/$id/{-$tab}']['path'],
    ServerFileRoutesByPath['/users/$id/{-$tab}']['fullPath'],
    unknown
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogChar123CategoryChar125Route: BlogChar123CategoryChar125Route,
  ApiVChar123VersionChar125Char123EndpointChar125Route:
    ApiVChar123VersionChar125Char123EndpointChar125Route,
  UsersIdChar123TabChar125Route: UsersIdChar123TabChar125Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
