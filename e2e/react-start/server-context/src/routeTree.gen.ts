/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as FooRouteImport } from './routes/foo'
import { Route as IndexRouteImport } from './routes/index'
import { Route as FooBarRouteImport } from './routes/foo/bar'

const FooRoute = FooRouteImport.update({
  id: '/foo',
  path: '/foo',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const FooBarRoute = FooBarRouteImport.update({
  id: '/bar',
  path: '/bar',
  getParentRoute: () => FooRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/foo': typeof FooRouteWithChildren
  '/foo/bar': typeof FooBarRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/foo': typeof FooRouteWithChildren
  '/foo/bar': typeof FooBarRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/foo': typeof FooRouteWithChildren
  '/foo/bar': typeof FooBarRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/foo' | '/foo/bar'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/foo' | '/foo/bar'
  id: '__root__' | '/' | '/foo' | '/foo/bar'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FooRoute: typeof FooRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/foo': {
      id: '/foo'
      path: '/foo'
      fullPath: '/foo'
      preLoaderRoute: typeof FooRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/foo/bar': {
      id: '/foo/bar'
      path: '/bar'
      fullPath: '/foo/bar'
      preLoaderRoute: typeof FooBarRouteImport
      parentRoute: typeof FooRoute
    }
  }
}

interface FooRouteChildren {
  FooBarRoute: typeof FooBarRoute
}

const FooRouteChildren: FooRouteChildren = {
  FooBarRoute: FooBarRoute,
}

const FooRouteWithChildren = FooRoute._addFileChildren(FooRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FooRoute: FooRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { createStart } from '@tanstack/react-start'
