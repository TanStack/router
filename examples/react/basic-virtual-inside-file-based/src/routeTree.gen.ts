/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PostsRouteImport } from './routes/posts'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as postsDetailsRouteImport } from './routes/posts/details'
import { Route as LayoutLayout2RouteImport } from './routes/_layout/_layout-2'
import { Route as postsHomeRouteImport } from './routes/posts/home'
import { Route as postsLetsGoIndexRouteImport } from './routes/posts/lets-go/index'
import { Route as LayoutLayout2LayoutBRouteImport } from './routes/_layout/_layout-2/layout-b'
import { Route as LayoutLayout2LayoutARouteImport } from './routes/_layout/_layout-2/layout-a'
import { Route as postsLetsGoDeeperHomeRouteImport } from './routes/posts/lets-go/deeper/home'

// Create/Update Routes

const PostsRoute = PostsRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const postsDetailsRoute = postsDetailsRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRoute,
} as any)

const LayoutLayout2Route = LayoutLayout2RouteImport.update({
  id: '/_layout-2',
  getParentRoute: () => LayoutRoute,
} as any)

const postsHomeRoute = postsHomeRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRoute,
} as any)

const postsLetsGoIndexRoute = postsLetsGoIndexRouteImport.update({
  id: '/inception/',
  path: '/inception/',
  getParentRoute: () => PostsRoute,
} as any)

const LayoutLayout2LayoutBRoute = LayoutLayout2LayoutBRouteImport.update({
  id: '/layout-b',
  path: '/layout-b',
  getParentRoute: () => LayoutLayout2Route,
} as any)

const LayoutLayout2LayoutARoute = LayoutLayout2LayoutARouteImport.update({
  id: '/layout-a',
  path: '/layout-a',
  getParentRoute: () => LayoutLayout2Route,
} as any)

const postsLetsGoDeeperHomeRoute = postsLetsGoDeeperHomeRouteImport.update({
  id: '/inception/deeper/',
  path: '/inception/deeper/',
  getParentRoute: () => PostsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof postsHomeRouteImport
      parentRoute: typeof PostsRouteImport
    }
    '/_layout/_layout-2': {
      id: '/_layout/_layout-2'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutLayout2RouteImport
      parentRoute: typeof LayoutRouteImport
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof postsDetailsRouteImport
      parentRoute: typeof PostsRouteImport
    }
    '/_layout/_layout-2/layout-a': {
      id: '/_layout/_layout-2/layout-a'
      path: '/layout-a'
      fullPath: '/layout-a'
      preLoaderRoute: typeof LayoutLayout2LayoutARouteImport
      parentRoute: typeof LayoutLayout2RouteImport
    }
    '/_layout/_layout-2/layout-b': {
      id: '/_layout/_layout-2/layout-b'
      path: '/layout-b'
      fullPath: '/layout-b'
      preLoaderRoute: typeof LayoutLayout2LayoutBRouteImport
      parentRoute: typeof LayoutLayout2RouteImport
    }
    '/posts/inception/': {
      id: '/posts/inception/'
      path: '/inception'
      fullPath: '/posts/inception'
      preLoaderRoute: typeof postsLetsGoIndexRouteImport
      parentRoute: typeof PostsRouteImport
    }
    '/posts/inception/deeper/': {
      id: '/posts/inception/deeper/'
      path: '/inception/deeper'
      fullPath: '/posts/inception/deeper'
      preLoaderRoute: typeof postsLetsGoDeeperHomeRouteImport
      parentRoute: typeof PostsRouteImport
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/_layout' {
  const createFileRoute: CreateFileRoute<
    '/_layout',
    FileRoutesByPath['/_layout']['parentRoute'],
    FileRoutesByPath['/_layout']['id'],
    FileRoutesByPath['/_layout']['path'],
    FileRoutesByPath['/_layout']['fullPath']
  >
}
declare module './routes/posts' {
  const createFileRoute: CreateFileRoute<
    '/posts',
    FileRoutesByPath['/posts']['parentRoute'],
    FileRoutesByPath['/posts']['id'],
    FileRoutesByPath['/posts']['path'],
    FileRoutesByPath['/posts']['fullPath']
  >
}
declare module './routes/posts/home' {
  const createFileRoute: CreateFileRoute<
    '/posts/',
    FileRoutesByPath['/posts/']['parentRoute'],
    FileRoutesByPath['/posts/']['id'],
    FileRoutesByPath['/posts/']['path'],
    FileRoutesByPath['/posts/']['fullPath']
  >
}
declare module './routes/_layout/_layout-2' {
  const createFileRoute: CreateFileRoute<
    '/_layout/_layout-2',
    FileRoutesByPath['/_layout/_layout-2']['parentRoute'],
    FileRoutesByPath['/_layout/_layout-2']['id'],
    FileRoutesByPath['/_layout/_layout-2']['path'],
    FileRoutesByPath['/_layout/_layout-2']['fullPath']
  >
}
declare module './routes/posts/details' {
  const createFileRoute: CreateFileRoute<
    '/posts/$postId',
    FileRoutesByPath['/posts/$postId']['parentRoute'],
    FileRoutesByPath['/posts/$postId']['id'],
    FileRoutesByPath['/posts/$postId']['path'],
    FileRoutesByPath['/posts/$postId']['fullPath']
  >
}
declare module './routes/_layout/_layout-2/layout-a' {
  const createFileRoute: CreateFileRoute<
    '/_layout/_layout-2/layout-a',
    FileRoutesByPath['/_layout/_layout-2/layout-a']['parentRoute'],
    FileRoutesByPath['/_layout/_layout-2/layout-a']['id'],
    FileRoutesByPath['/_layout/_layout-2/layout-a']['path'],
    FileRoutesByPath['/_layout/_layout-2/layout-a']['fullPath']
  >
}
declare module './routes/_layout/_layout-2/layout-b' {
  const createFileRoute: CreateFileRoute<
    '/_layout/_layout-2/layout-b',
    FileRoutesByPath['/_layout/_layout-2/layout-b']['parentRoute'],
    FileRoutesByPath['/_layout/_layout-2/layout-b']['id'],
    FileRoutesByPath['/_layout/_layout-2/layout-b']['path'],
    FileRoutesByPath['/_layout/_layout-2/layout-b']['fullPath']
  >
}
declare module './routes/posts/lets-go/index' {
  const createFileRoute: CreateFileRoute<
    '/posts/inception/',
    FileRoutesByPath['/posts/inception/']['parentRoute'],
    FileRoutesByPath['/posts/inception/']['id'],
    FileRoutesByPath['/posts/inception/']['path'],
    FileRoutesByPath['/posts/inception/']['fullPath']
  >
}
declare module './routes/posts/lets-go/deeper/home' {
  const createFileRoute: CreateFileRoute<
    '/posts/inception/deeper/',
    FileRoutesByPath['/posts/inception/deeper/']['parentRoute'],
    FileRoutesByPath['/posts/inception/deeper/']['id'],
    FileRoutesByPath['/posts/inception/deeper/']['path'],
    FileRoutesByPath['/posts/inception/deeper/']['fullPath']
  >
}

// Create and export the route tree

interface LayoutLayout2RouteChildren {
  LayoutLayout2LayoutARoute: typeof LayoutLayout2LayoutARoute
  LayoutLayout2LayoutBRoute: typeof LayoutLayout2LayoutBRoute
}

const LayoutLayout2RouteChildren: LayoutLayout2RouteChildren = {
  LayoutLayout2LayoutARoute: LayoutLayout2LayoutARoute,
  LayoutLayout2LayoutBRoute: LayoutLayout2LayoutBRoute,
}

const LayoutLayout2RouteWithChildren = LayoutLayout2Route._addFileChildren(
  LayoutLayout2RouteChildren,
)

interface LayoutRouteChildren {
  LayoutLayout2Route: typeof LayoutLayout2RouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutLayout2Route: LayoutLayout2RouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

interface PostsRouteChildren {
  postsHomeRoute: typeof postsHomeRoute
  postsDetailsRoute: typeof postsDetailsRoute
  postsLetsGoIndexRoute: typeof postsLetsGoIndexRoute
  postsLetsGoDeeperHomeRoute: typeof postsLetsGoDeeperHomeRoute
}

const PostsRouteChildren: PostsRouteChildren = {
  postsHomeRoute: postsHomeRoute,
  postsDetailsRoute: postsDetailsRoute,
  postsLetsGoIndexRoute: postsLetsGoIndexRoute,
  postsLetsGoDeeperHomeRoute: postsLetsGoDeeperHomeRoute,
}

const PostsRouteWithChildren = PostsRoute._addFileChildren(PostsRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutLayout2RouteWithChildren
  '/posts': typeof PostsRouteWithChildren
  '/posts/': typeof postsHomeRoute
  '/posts/$postId': typeof postsDetailsRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
  '/posts/inception': typeof postsLetsGoIndexRoute
  '/posts/inception/deeper': typeof postsLetsGoDeeperHomeRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutLayout2RouteWithChildren
  '/posts': typeof postsHomeRoute
  '/posts/$postId': typeof postsDetailsRoute
  '/layout-a': typeof LayoutLayout2LayoutARoute
  '/layout-b': typeof LayoutLayout2LayoutBRoute
  '/posts/inception': typeof postsLetsGoIndexRoute
  '/posts/inception/deeper': typeof postsLetsGoDeeperHomeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/posts': typeof PostsRouteWithChildren
  '/posts/': typeof postsHomeRoute
  '/_layout/_layout-2': typeof LayoutLayout2RouteWithChildren
  '/posts/$postId': typeof postsDetailsRoute
  '/_layout/_layout-2/layout-a': typeof LayoutLayout2LayoutARoute
  '/_layout/_layout-2/layout-b': typeof LayoutLayout2LayoutBRoute
  '/posts/inception/': typeof postsLetsGoIndexRoute
  '/posts/inception/deeper/': typeof postsLetsGoDeeperHomeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/posts'
    | '/posts/'
    | '/posts/$postId'
    | '/layout-a'
    | '/layout-b'
    | '/posts/inception'
    | '/posts/inception/deeper'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/posts'
    | '/posts/$postId'
    | '/layout-a'
    | '/layout-b'
    | '/posts/inception'
    | '/posts/inception/deeper'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/posts'
    | '/posts/'
    | '/_layout/_layout-2'
    | '/posts/$postId'
    | '/_layout/_layout-2/layout-a'
    | '/_layout/_layout-2/layout-b'
    | '/posts/inception/'
    | '/posts/inception/deeper/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  PostsRoute: typeof PostsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  PostsRoute: PostsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/posts"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_layout-2"
      ]
    },
    "/posts": {
      "filePath": "posts.tsx",
      "children": [
        "/posts/",
        "/posts/$postId",
        "/posts/inception/",
        "/posts/inception/deeper/"
      ]
    },
    "/posts/": {
      "filePath": "posts/home.tsx",
      "parent": "/posts"
    },
    "/_layout/_layout-2": {
      "filePath": "_layout/_layout-2.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_layout-2/layout-a",
        "/_layout/_layout-2/layout-b"
      ]
    },
    "/posts/$postId": {
      "filePath": "posts/details.tsx",
      "parent": "/posts"
    },
    "/_layout/_layout-2/layout-a": {
      "filePath": "_layout/_layout-2/layout-a.tsx",
      "parent": "/_layout/_layout-2"
    },
    "/_layout/_layout-2/layout-b": {
      "filePath": "_layout/_layout-2/layout-b.tsx",
      "parent": "/_layout/_layout-2"
    },
    "/posts/inception/": {
      "filePath": "posts/lets-go/index.tsx",
      "parent": "/posts"
    },
    "/posts/inception/deeper/": {
      "filePath": "posts/lets-go/deeper/home.tsx",
      "parent": "/posts"
    }
  }
}
ROUTE_MANIFEST_END */
