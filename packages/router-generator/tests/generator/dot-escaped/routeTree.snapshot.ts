/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as ScriptDotjsRouteImport } from './routes/script[.]js'
import { Route as NestedDotjsRouteImport } from './routes/nested[.]js'
import { Route as NestedDotjsScriptDotjsRouteImport } from './routes/nested[.]js.script[.]js'
import { Route as NestedDotjsDoubleDotextDotjsRouteImport } from './routes/nested[.]js.double[.]ext[.]js'

const rootRouteImport = createRooRoute()

const ScriptDotjsRoute = ScriptDotjsRouteImport.update({
  id: '/script.js',
  path: '/script.js',
  getParentRoute: () => rootRouteImport,
} as any)
const NestedDotjsRoute = NestedDotjsRouteImport.update({
  id: '/nested.js',
  path: '/nested.js',
  getParentRoute: () => rootRouteImport,
} as any)
const NestedDotjsScriptDotjsRoute = NestedDotjsScriptDotjsRouteImport.update({
  id: '/script.js',
  path: '/script.js',
  getParentRoute: () => NestedDotjsRoute,
} as any)
const NestedDotjsDoubleDotextDotjsRoute =
  NestedDotjsDoubleDotextDotjsRouteImport.update({
    id: '/double.ext.js',
    path: '/double.ext.js',
    getParentRoute: () => NestedDotjsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/nested.js': typeof NestedDotjsRouteWithChildren
  '/script.js': typeof ScriptDotjsRoute
  '/nested.js/double.ext.js': typeof NestedDotjsDoubleDotextDotjsRoute
  '/nested.js/script.js': typeof NestedDotjsScriptDotjsRoute
}
export interface FileRoutesByTo {
  '/nested.js': typeof NestedDotjsRouteWithChildren
  '/script.js': typeof ScriptDotjsRoute
  '/nested.js/double.ext.js': typeof NestedDotjsDoubleDotextDotjsRoute
  '/nested.js/script.js': typeof NestedDotjsScriptDotjsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/nested.js': typeof NestedDotjsRouteWithChildren
  '/script.js': typeof ScriptDotjsRoute
  '/nested.js/double.ext.js': typeof NestedDotjsDoubleDotextDotjsRoute
  '/nested.js/script.js': typeof NestedDotjsScriptDotjsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/nested.js'
    | '/script.js'
    | '/nested.js/double.ext.js'
    | '/nested.js/script.js'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/nested.js'
    | '/script.js'
    | '/nested.js/double.ext.js'
    | '/nested.js/script.js'
  id:
    | '__root__'
    | '/nested.js'
    | '/script.js'
    | '/nested.js/double.ext.js'
    | '/nested.js/script.js'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  NestedDotjsRoute: typeof NestedDotjsRouteWithChildren
  ScriptDotjsRoute: typeof ScriptDotjsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/nested.js': {
      id: '/nested.js'
      path: '/nested.js'
      fullPath: '/nested.js'
      preLoaderRoute: typeof NestedDotjsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/script.js': {
      id: '/script.js'
      path: '/script.js'
      fullPath: '/script.js'
      preLoaderRoute: typeof ScriptDotjsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nested.js/double.ext.js': {
      id: '/nested.js/double.ext.js'
      path: '/double.ext.js'
      fullPath: '/nested.js/double.ext.js'
      preLoaderRoute: typeof NestedDotjsDoubleDotextDotjsRouteImport
      parentRoute: typeof NestedDotjsRoute
    }
    '/nested.js/script.js': {
      id: '/nested.js/script.js'
      path: '/script.js'
      fullPath: '/nested.js/script.js'
      preLoaderRoute: typeof NestedDotjsScriptDotjsRouteImport
      parentRoute: typeof NestedDotjsRoute
    }
  }
}

interface NestedDotjsRouteChildren {
  NestedDotjsDoubleDotextDotjsRoute: typeof NestedDotjsDoubleDotextDotjsRoute
  NestedDotjsScriptDotjsRoute: typeof NestedDotjsScriptDotjsRoute
}

const NestedDotjsRouteChildren: NestedDotjsRouteChildren = {
  NestedDotjsDoubleDotextDotjsRoute: NestedDotjsDoubleDotextDotjsRoute,
  NestedDotjsScriptDotjsRoute: NestedDotjsScriptDotjsRoute,
}

const NestedDotjsRouteWithChildren = NestedDotjsRoute._addFileChildren(
  NestedDotjsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  NestedDotjsRoute: NestedDotjsRouteWithChildren,
  ScriptDotjsRoute: ScriptDotjsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
