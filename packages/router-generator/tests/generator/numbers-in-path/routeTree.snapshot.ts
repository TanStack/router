/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as R03RouteImport } from './routes/03'
import { Route as IndexRouteImport } from './routes/index'
import { Route as R02IndexRouteImport } from './routes/02.index'
import { Route as R01ExampleIndexRouteImport } from './routes/01-example/index'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const R03Route = R03RouteImport.update({
  id: '/03',
  path: '/03',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const R02IndexRoute = R02IndexRouteImport.update({
  id: '/02/',
  path: '/02/',
  getParentRoute: () => rootRouteImport,
} as any)
const R01ExampleIndexRoute = R01ExampleIndexRouteImport.update({
  id: '/01-example/',
  path: '/01-example/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/03': typeof R03Route
  '/about': typeof AboutRoute
  '/01-example': typeof R01ExampleIndexRoute
  '/02': typeof R02IndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/03': typeof R03Route
  '/about': typeof AboutRoute
  '/01-example': typeof R01ExampleIndexRoute
  '/02': typeof R02IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/03': typeof R03Route
  '/about': typeof AboutRoute
  '/01-example/': typeof R01ExampleIndexRoute
  '/02/': typeof R02IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/03' | '/about' | '/01-example' | '/02'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/03' | '/about' | '/01-example' | '/02'
  id: '__root__' | '/' | '/03' | '/about' | '/01-example/' | '/02/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R03Route: typeof R03Route
  AboutRoute: typeof AboutRoute
  R01ExampleIndexRoute: typeof R01ExampleIndexRoute
  R02IndexRoute: typeof R02IndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/03': {
      id: '/03'
      path: '/03'
      fullPath: '/03'
      preLoaderRoute: typeof R03RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/01-example/': {
      id: '/01-example/'
      path: '/01-example'
      fullPath: '/01-example'
      preLoaderRoute: typeof R01ExampleIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/02/': {
      id: '/02/'
      path: '/02'
      fullPath: '/02'
      preLoaderRoute: typeof R02IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R03Route: R03Route,
  AboutRoute: AboutRoute,
  R01ExampleIndexRoute: R01ExampleIndexRoute,
  R02IndexRoute: R02IndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
